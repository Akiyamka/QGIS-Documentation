# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
# 
# Translators:
# Harrissou Sant-anna, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-12 00:23+0100\n"
"PO-Revision-Date: 2022-03-14 05:09+0000\n"
"Last-Translator: Harrissou Sant-anna, 2023\n"
"Language-Team: Estonian (https://www.transifex.com/qgis/teams/6144/et/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Language: et\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:8
msgid "Introduction"
msgstr "Introduction"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:11
msgid ""
"This document is intended to be both a tutorial and a reference guide. While"
" it does not list all possible use cases, it should give a good overview of "
"the principal functionality."
msgstr ""
"This document is intended to be both a tutorial and a reference guide. While"
" it does not list all possible use cases, it should give a good overview of "
"the principal functionality."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:16
msgid ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, no Front-Cover Texts, and no Back-Cover Texts."
msgstr ""
"Permission is granted to copy, distribute and/or modify this document under "
"the terms of the GNU Free Documentation License, Version 1.3 or any later "
"version published by the Free Software Foundation; with no Invariant "
"Sections, no Front-Cover Texts, and no Back-Cover Texts."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:21
msgid "A copy of the license is included in the section :ref:`gnu_fdl`."
msgstr "A copy of the license is included in the section :ref:`gnu_fdl`."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:23
msgid "This license also applies to all code snippets in this document."
msgstr "This license also applies to all code snippets in this document."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:31
msgid ""
"Python support was first introduced in QGIS 0.9. There are several ways to "
"use Python in QGIS Desktop (covered in the following sections):"
msgstr ""
"Python support was first introduced in QGIS 0.9. There are several ways to "
"use Python in QGIS Desktop (covered in the following sections):"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:35
msgid "Issue commands in the Python console within QGIS"
msgstr "Issue commands in the Python console within QGIS"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:36
msgid "Create and use plugins"
msgstr "Create and use plugins"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:37
msgid "Automatically run Python code when QGIS starts"
msgstr "Automatically run Python code when QGIS starts"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:38
msgid "Create processing algorithms"
msgstr "Create processing algorithms"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:39
msgid "Create functions for expressions in QGIS"
msgstr "Create functions for expressions in QGIS"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:40
msgid "Create custom applications based on the QGIS API"
msgstr "Create custom applications based on the QGIS API"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:42
msgid ""
"Python bindings are also available for QGIS Server, including Python plugins"
" (see :ref:`server_plugins`) and Python bindings that can be used to embed "
"QGIS Server into a Python application."
msgstr ""
"Python bindings are also available for QGIS Server, including Python plugins"
" (see :ref:`server_plugins`) and Python bindings that can be used to embed "
"QGIS Server into a Python application."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:49
msgid ""
"There is a :api:`complete QGIS C++ API <>` reference that documents the "
"classes from the QGIS libraries. :pyqgis:`The Pythonic QGIS API (pyqgis) <>`"
" is nearly identical to the C++ API."
msgstr ""
"There is a :api:`complete QGIS C++ API <>` reference that documents the "
"classes from the QGIS libraries. :pyqgis:`The Pythonic QGIS API (pyqgis) <>`"
" is nearly identical to the C++ API."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:53
msgid ""
"Another good resource for learning how to perform common tasks is to "
"download existing plugins from the `plugin repository "
"<https://plugins.qgis.org/>`_ and examine their code."
msgstr ""
"Another good resource for learning how to perform common tasks is to "
"download existing plugins from the `plugin repository "
"<https://plugins.qgis.org/>`_ and examine their code."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:64
msgid "Scripting in the Python Console"
msgstr "Scripting in the Python Console"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:66
msgid ""
"QGIS provides an integrated :ref:`Python console <console>` for scripting. "
"It can be opened from the :menuselection:`Plugins --> Python Console` menu:"
msgstr ""
"QGIS provides an integrated :ref:`Python console <console>` for scripting. "
"It can be opened from the :menuselection:`Plugins --> Python Console` menu:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:73
msgid "QGIS Python console"
msgstr "QGIS Python console"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:75
msgid ""
"The screenshot above illustrates how to get the layer currently selected in "
"the layer list, show its ID and optionally, if it is a vector layer, show "
"the feature count. For interaction with the QGIS environment, there is an "
":data:`iface` variable, which is an instance of :class:`QgisInterface "
"<qgis.gui.QgisInterface>`. This interface allows access to the map canvas, "
"menus, toolbars and other parts of the QGIS application."
msgstr ""
"The screenshot above illustrates how to get the layer currently selected in "
"the layer list, show its ID and optionally, if it is a vector layer, show "
"the feature count. For interaction with the QGIS environment, there is an "
":data:`iface` variable, which is an instance of :class:`QgisInterface "
"<qgis.gui.QgisInterface>`. This interface allows access to the map canvas, "
"menus, toolbars and other parts of the QGIS application."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:84
msgid ""
"For user convenience, the following statements are executed when the console"
" is started (in the future it will be possible to set further initial "
"commands)"
msgstr ""
"For user convenience, the following statements are executed when the console"
" is started (in the future it will be possible to set further initial "
"commands)"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:93
msgid ""
"For those which use the console often, it may be useful to set a shortcut "
"for triggering the console (within :menuselection:`Settings --> Keyboard "
"shortcuts...`)"
msgstr ""
"For those which use the console often, it may be useful to set a shortcut "
"for triggering the console (within :menuselection:`Settings --> Keyboard "
"shortcuts...`)"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:100
msgid "Python Plugins"
msgstr "Python Plugins"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:102
msgid ""
"The functionality of QGIS can be extended using plugins. Plugins can be "
"written in Python. The main advantage over C++ plugins is simplicity of "
"distribution (no compiling for each platform) and easier development."
msgstr ""
"The functionality of QGIS can be extended using plugins. Plugins can be "
"written in Python. The main advantage over C++ plugins is simplicity of "
"distribution (no compiling for each platform) and easier development."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:108
msgid ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to easily "
"fetch, upgrade and remove Python plugins. See the `Python Plugins "
"<https://plugins.qgis.org/>`_ page for more information about plugins and "
"plugin development."
msgstr ""
"Many plugins covering various functionality have been written since the "
"introduction of Python support. The plugin installer allows users to easily "
"fetch, upgrade and remove Python plugins. See the `Python Plugins "
"<https://plugins.qgis.org/>`_ page for more information about plugins and "
"plugin development."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:114
msgid ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."
msgstr ""
"Creating plugins in Python is simple, see :ref:`developing_plugins` for "
"detailed instructions."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:119
msgid ""
"Python plugins are also available for QGIS server. See :ref:`server_plugins`"
" for further details."
msgstr ""
"Python plugins are also available for QGIS server. See :ref:`server_plugins`"
" for further details."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:124
msgid "Processing Plugins"
msgstr "Processing Plugins"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:126
msgid ""
"Processing Plugins can be used to process data. They are easier to develop, "
"more specific and more lightweight than Python Plugins. "
":ref:`processing_plugin` explains when the use of Processing algorithms is "
"appropiate and how to develop them."
msgstr ""
"Processing Plugins can be used to process data. They are easier to develop, "
"more specific and more lightweight than Python Plugins. "
":ref:`processing_plugin` explains when the use of Processing algorithms is "
"appropiate and how to develop them."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:135
msgid "Running Python code when QGIS starts"
msgstr "Running Python code when QGIS starts"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:137
msgid ""
"There are two distinct methods to run Python code every time QGIS starts."
msgstr ""
"There are two distinct methods to run Python code every time QGIS starts."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:140
msgid "Creating a startup.py script"
msgstr "Creating a startup.py script"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:142
msgid ""
"Setting the ``PYQGIS_STARTUP`` environment variable to an existing Python "
"file"
msgstr ""
"Setting the ``PYQGIS_STARTUP`` environment variable to an existing Python "
"file"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:147
msgid "The :file:`startup.py` file"
msgstr "The :file:`startup.py` file"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:149
msgid "Every time QGIS starts, the user's Python home directory"
msgstr "Every time QGIS starts, the user's Python home directory"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:151
msgid "Linux: :file:`.local/share/QGIS/QGIS3`"
msgstr "Linux: :file:`.local/share/QGIS/QGIS3`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:152
msgid "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3`"
msgstr "Windows: :file:`AppData\\\\Roaming\\\\QGIS\\\\QGIS3`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:153
msgid "macOS: :file:`Library/Application Support/QGIS/QGIS3`"
msgstr "macOS: :file:`Library/Application Support/QGIS/QGIS3`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:155
msgid ""
"is searched for a file named :file:`startup.py`. If that file exists, it is "
"executed by the embedded Python interpreter."
msgstr ""
"is searched for a file named :file:`startup.py`. If that file exists, it is "
"executed by the embedded Python interpreter."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:158
msgid ""
"The default path depends on the operating system. To find the path that will"
" work for you, open the Python Console and run "
"``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)`` to see "
"the list of default directories."
msgstr ""
"The default path depends on the operating system. To find the path that will"
" work for you, open the Python Console and run "
"``QStandardPaths.standardLocations(QStandardPaths.AppDataLocation)`` to see "
"the list of default directories."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:167
msgid "The PYQGIS_STARTUP environment variable"
msgstr "The PYQGIS_STARTUP environment variable"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:169
msgid ""
"You can run Python code just before QGIS initialization completes by setting"
" the ``PYQGIS_STARTUP`` environment variable to the path of an existing "
"Python file."
msgstr ""
"You can run Python code just before QGIS initialization completes by setting"
" the ``PYQGIS_STARTUP`` environment variable to the path of an existing "
"Python file."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:173
msgid ""
"This code will run before QGIS initialization is complete. This method is "
"very useful for cleaning sys.path, which may have undesireable paths, or for"
" isolating/loading the initial environment without requiring a virtual "
"environment, e.g. homebrew or MacPorts installs on Mac."
msgstr ""
"This code will run before QGIS initialization is complete. This method is "
"very useful for cleaning sys.path, which may have undesireable paths, or for"
" isolating/loading the initial environment without requiring a virtual "
"environment, e.g. homebrew or MacPorts installs on Mac."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:186
msgid "Python Applications"
msgstr "Python Applications"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:188
msgid ""
"It is often handy to create  scripts for automating processes. With PyQGIS, "
"this is perfectly possible --- import the :pyqgis:`qgis.core <core>` module,"
" initialize it and you are ready for the processing."
msgstr ""
"It is often handy to create  scripts for automating processes. With PyQGIS, "
"this is perfectly possible --- import the :pyqgis:`qgis.core <core>` module,"
" initialize it and you are ready for the processing."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:193
msgid ""
"Or you may want to create an interactive application that uses GIS "
"functionality --- perform measurements, export a map as PDF, ... The "
":pyqgis:`qgis.gui <gui>` module provides various GUI components, most "
"notably the map canvas widget that can be incorporated into the application "
"with support for zooming, panning and/or any further custom map tools."
msgstr ""
"Or you may want to create an interactive application that uses GIS "
"functionality --- perform measurements, export a map as PDF, ... The "
":pyqgis:`qgis.gui <gui>` module provides various GUI components, most "
"notably the map canvas widget that can be incorporated into the application "
"with support for zooming, panning and/or any further custom map tools."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:200
msgid ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources, such as projection information and providers for "
"reading vector and raster layers. QGIS Resources are initialized by adding a"
" few lines to the beginning of your application or script. The code to "
"initialize QGIS for custom applications and standalone scripts is similar. "
"Examples of each are provided below."
msgstr ""
"PyQGIS custom applications or standalone scripts must be configured to "
"locate the QGIS resources, such as projection information and providers for "
"reading vector and raster layers. QGIS Resources are initialized by adding a"
" few lines to the beginning of your application or script. The code to "
"initialize QGIS for custom applications and standalone scripts is similar. "
"Examples of each are provided below."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:210
msgid ""
"Do *not* use :file:`qgis.py` as a name for your script. Python will not be "
"able to import the bindings as the script's name will shadow them."
msgstr ""
"Do *not* use :file:`qgis.py` as a name for your script. Python will not be "
"able to import the bindings as the script's name will shadow them."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:217
msgid "Using PyQGIS in standalone scripts"
msgstr "Using PyQGIS in standalone scripts"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:219
msgid ""
"To start a standalone script, initialize the QGIS resources at the beginning"
" of the script:"
msgstr ""
"To start a standalone script, initialize the QGIS resources at the beginning"
" of the script:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:243
msgid ""
"First we import the :pyqgis:`qgis.core <core>` module and configure the "
"prefix path. The prefix path is the location where QGIS is installed on your"
" system. It is configured in the script by calling the "
":meth:`setPrefixPath() <qgis.core.QgsApplication.setPrefixPath>` method. The"
" second argument of :meth:`setPrefixPath() "
"<qgis.core.QgsApplication.setPrefixPath>` is set to :const:`True`, "
"specifying that default paths are to be used."
msgstr ""
"First we import the :pyqgis:`qgis.core <core>` module and configure the "
"prefix path. The prefix path is the location where QGIS is installed on your"
" system. It is configured in the script by calling the "
":meth:`setPrefixPath() <qgis.core.QgsApplication.setPrefixPath>` method. The"
" second argument of :meth:`setPrefixPath() "
"<qgis.core.QgsApplication.setPrefixPath>` is set to :const:`True`, "
"specifying that default paths are to be used."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:252
msgid ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your system is to use the :ref:`pythonconsole` from within QGIS and look at "
"the output from running:"
msgstr ""
"The QGIS install path varies by platform; the easiest way to find it for "
"your system is to use the :ref:`pythonconsole` from within QGIS and look at "
"the output from running:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:260
msgid ""
"After the prefix path is configured, we save a reference to "
":class:`QgsApplication <qgis.core.QgsApplication>` in the variable ``qgs``. "
"The second argument is set to :const:`False`, specifying that we do not plan"
" to use the GUI since we are writing a standalone script. With "
"``QgsApplication`` configured, we load the QGIS data providers and layer "
"registry by calling the :meth:`initQgis() "
"<qgis.core.QgsApplication.initQgis>` method."
msgstr ""
"After the prefix path is configured, we save a reference to "
":class:`QgsApplication <qgis.core.QgsApplication>` in the variable ``qgs``. "
"The second argument is set to :const:`False`, specifying that we do not plan"
" to use the GUI since we are writing a standalone script. With "
"``QgsApplication`` configured, we load the QGIS data providers and layer "
"registry by calling the :meth:`initQgis() "
"<qgis.core.QgsApplication.initQgis>` method."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:271
msgid ""
"With QGIS initialized, we are ready to write the rest of the script. "
"Finally, we wrap up by calling :meth:`exitQgis() "
"<qgis.core.QgsApplication.exitQgis>` to remove the data providers and layer "
"registry from memory."
msgstr ""
"With QGIS initialized, we are ready to write the rest of the script. "
"Finally, we wrap up by calling :meth:`exitQgis() "
"<qgis.core.QgsApplication.exitQgis>` to remove the data providers and layer "
"registry from memory."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:280
msgid "Using PyQGIS in custom applications"
msgstr "Using PyQGIS in custom applications"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:282
msgid ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
":class:`QgsApplication <qgis.core.QgsApplication>`. Pass :const:`True` "
"instead of :const:`False` to indicate that we plan to use a GUI."
msgstr ""
"The only difference between :ref:`standalonescript` and a custom PyQGIS "
"application is the second argument when instantiating the "
":class:`QgsApplication <qgis.core.QgsApplication>`. Pass :const:`True` "
"instead of :const:`False` to indicate that we plan to use a GUI."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:312
msgid ""
"Now you can work with the QGIS API - load layers and do some processing or "
"fire up a GUI with a map canvas. The possibilities are endless :-)"
msgstr ""
"Now you can work with the QGIS API - load layers and do some processing or "
"fire up a GUI with a map canvas. The possibilities are endless :-)"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:320
msgid "Running Custom Applications"
msgstr "Running Custom Applications"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:322
msgid ""
"You need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location - "
"otherwise Python will complain::"
msgstr ""
"You need to tell your system where to search for QGIS libraries and "
"appropriate Python modules if they are not in a well-known location - "
"otherwise Python will complain::"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:329
msgid ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In the"
" following commands, ``<qgispath>`` should be replaced with your actual QGIS"
" installation path:"
msgstr ""
"This can be fixed by setting the ``PYTHONPATH`` environment variable. In the"
" following commands, ``<qgispath>`` should be replaced with your actual QGIS"
" installation path:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:333
msgid "on Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"
msgstr "on Linux: :command:`export PYTHONPATH=/<qgispath>/share/qgis/python`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:334
msgid "on Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"
msgstr "on Windows: :command:`set PYTHONPATH=c:\\\\<qgispath>\\\\python`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:335
msgid ""
"on macOS: :command:`export PYTHONPATH=/<qgispath>/Contents/Resources/python`"
msgstr ""
"on macOS: :command:`export PYTHONPATH=/<qgispath>/Contents/Resources/python`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:337
msgid ""
"Now, the path to the PyQGIS modules is known, but they depend on the "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
"wrappers). The path to these libraries may be unknown to the operating "
"system, and then you will get an import error again (the message might vary "
"depending on the system)::"
msgstr ""
"Now, the path to the PyQGIS modules is known, but they depend on the "
"``qgis_core`` and ``qgis_gui`` libraries (the Python modules serve only as "
"wrappers). The path to these libraries may be unknown to the operating "
"system, and then you will get an import error again (the message might vary "
"depending on the system)::"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:347
msgid ""
"Fix this by adding the directories where the QGIS libraries reside to the "
"search path of the dynamic linker:"
msgstr ""
"Fix this by adding the directories where the QGIS libraries reside to the "
"search path of the dynamic linker:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:350
msgid "on Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"
msgstr "on Linux: :command:`export LD_LIBRARY_PATH=/<qgispath>/lib`"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:351
msgid ""
"on Windows: :command:`set "
"PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%`"
" where ``<qgisrelease>`` should be replaced with the type of release you are"
" targeting (eg, ``qgis-ltr``, ``qgis``, ``qgis-dev``)"
msgstr ""
"on Windows: :command:`set "
"PATH=C:\\\\<qgispath>\\\\bin;C:\\\\<qgispath>\\\\apps\\\\<qgisrelease>\\\\bin;%PATH%`"
" where ``<qgisrelease>`` should be replaced with the type of release you are"
" targeting (eg, ``qgis-ltr``, ``qgis``, ``qgis-dev``)"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:355
msgid ""
"These commands can be put into a bootstrap script that will take care of the"
" startup. When deploying custom applications using PyQGIS, there are usually"
" two possibilities:"
msgstr ""
"These commands can be put into a bootstrap script that will take care of the"
" startup. When deploying custom applications using PyQGIS, there are usually"
" two possibilities:"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:359
msgid ""
"require the user to install QGIS prior to installing your application. The "
"application installer should look for default locations of QGIS libraries "
"and allow the user to set the path if not found. This approach has the "
"advantage of being simpler, however it requires the user to do more steps."
msgstr ""
"require the user to install QGIS prior to installing your application. The "
"application installer should look for default locations of QGIS libraries "
"and allow the user to set the path if not found. This approach has the "
"advantage of being simpler, however it requires the user to do more steps."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:365
msgid ""
"package QGIS together with your application. Releasing the application may "
"be more challenging and the package will be larger, but the user will be "
"saved from the burden of downloading and installing additional pieces of "
"software."
msgstr ""
"package QGIS together with your application. Releasing the application may "
"be more challenging and the package will be larger, but the user will be "
"saved from the burden of downloading and installing additional pieces of "
"software."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:370
msgid ""
"The two deployment models can be mixed.  You can provide a standalone "
"applications on Windows and macOS, but for Linux leave the installation of "
"GIS up to the user and his package manager."
msgstr ""
"The two deployment models can be mixed.  You can provide a standalone "
"applications on Windows and macOS, but for Linux leave the installation of "
"GIS up to the user and his package manager."

#: ../../docs/pyqgis_developer_cookbook/intro.rst:375
msgid "Technical notes on PyQt and SIP"
msgstr "Technical notes on PyQt and SIP"

#: ../../docs/pyqgis_developer_cookbook/intro.rst:377
msgid ""
"We've decided for Python as it's one of the most favoured languages for "
"scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason for"
" using SIP instead of the more widely used SWIG is that the QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are done using SIP "
"and this allows seamless integration of PyQGIS with PyQt."
msgstr ""
"We've decided for Python as it's one of the most favoured languages for "
"scripting. PyQGIS bindings in QGIS 3 depend on SIP and PyQt5. The reason for"
" using SIP instead of the more widely used SWIG is that the QGIS code "
"depends on Qt libraries. Python bindings for Qt (PyQt) are done using SIP "
"and this allows seamless integration of PyQGIS with PyQt."
