# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
# 
# Translators:
# Harrissou Sant-anna, 2023
# Transifex Bot <>, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-03 15:20+0000\n"
"PO-Revision-Date: 2023-03-19 14:54+0000\n"
"Last-Translator: Transifex Bot <>, 2023\n"
"Language-Team: Estonian (https://app.transifex.com/qgis/teams/6144/et/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"Language: et\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../docs/user_manual/style_library/3d_symbols.rst:5
msgid "Creating 3D Symbols"
msgstr "Creating 3D Symbols"

#: ../../docs/user_manual/style_library/3d_symbols.rst:12
msgid ""
"The :guilabel:`Style Manager` helps you create and store 3D symbols for "
"every geometry type to render in the :ref:`3D map view <label_3dmapview>`."
msgstr ""
"The :guilabel:`Style Manager` helps you create and store 3D symbols for "
"every geometry type to render in the :ref:`3D map view <label_3dmapview>`."

#: ../../docs/user_manual/style_library/3d_symbols.rst:15
msgid ""
"As of the other items, enable the |3d| :guilabel:`3D Symbols` tab and expand"
" the |symbologyAdd| button menu to create:"
msgstr ""
"As of the other items, enable the |3d| :guilabel:`3D Symbols` tab and expand"
" the |symbologyAdd| button menu to create:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:200
msgid "3d"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:206
msgid "symbologyAdd"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:18
msgid ":ref:`3D point symbols <3d_pointlayers>`"
msgstr ":ref:`3D point symbols <3d_pointlayers>`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:19
msgid ":ref:`3D line symbols <3d_linelayers>`"
msgstr ":ref:`3D line symbols <3d_linelayers>`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:20
msgid ":ref:`3D polygon symbols <3d_polygonlayers>`"
msgstr ":ref:`3D polygon symbols <3d_polygonlayers>`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:26
msgid "Point Layers"
msgstr "Point Layers"

#: ../../docs/user_manual/style_library/3d_symbols.rst:33
msgid "Properties of a 3D point symbol"
msgstr "Properties of a 3D point symbol"

#: ../../docs/user_manual/style_library/3d_symbols.rst:35
msgid ""
"You can define different types of 3D :guilabel:`Shape` to use for point "
"symbols. They are mainly defined by their dimensions whose unit refers to "
"the CRS of the project. Available types are:"
msgstr ""
"You can define different types of 3D :guilabel:`Shape` to use for point "
"symbols. They are mainly defined by their dimensions whose unit refers to "
"the CRS of the project. Available types are:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:39
msgid ":guilabel:`Sphere` defined by a :guilabel:`Radius`"
msgstr ":guilabel:`Sphere` defined by a :guilabel:`Radius`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:40
msgid ""
":guilabel:`Cylinder` defined by a :guilabel:`Radius` and :guilabel:`Length`"
msgstr ""
":guilabel:`Cylinder` defined by a :guilabel:`Radius` and :guilabel:`Length`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:41
msgid ":guilabel:`Cube` defined by a :guilabel:`Size`"
msgstr ":guilabel:`Cube` defined by a :guilabel:`Size`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:42
msgid ""
":guilabel:`Cone` defined by a :guilabel:`Top radius`, a :guilabel:`Bottom "
"radius` and a :guilabel:`Length`"
msgstr ""
":guilabel:`Cone` defined by a :guilabel:`Top radius`, a :guilabel:`Bottom "
"radius` and a :guilabel:`Length`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:44
msgid ":guilabel:`Plane` defined by a :guilabel:`Size`"
msgstr ":guilabel:`Plane` defined by a :guilabel:`Size`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:45
msgid ""
":guilabel:`Torus` defined by a :guilabel:`Radius` and a :guilabel:`Minor "
"radius`"
msgstr ""
":guilabel:`Torus` defined by a :guilabel:`Radius` and a :guilabel:`Minor "
"radius`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:51
msgid ""
":guilabel:`Billboard`, defined by the :guilabel:`Billboard height` and the "
":guilabel:`Billboard symbol` (usually based on a :ref:`marker symbol "
"<vector_marker_symbols>`). The symbol will have a stable size. Convenient "
"for visualizing 3D point clouds Shapes."
msgstr ""
":guilabel:`Billboard`, defined by the :guilabel:`Billboard height` and the "
":guilabel:`Billboard symbol` (usually based on a :ref:`marker symbol "
"<vector_marker_symbols>`). The symbol will have a stable size. Convenient "
"for visualizing 3D point clouds Shapes."

#: ../../docs/user_manual/style_library/3d_symbols.rst:55
msgid ""
"The :guilabel:`Altitude clamping` can be set to :guilabel:`Absolute`, "
":guilabel:`Relative` or :guilabel:`Terrain`. The :guilabel:`Absolute` "
"setting can be used when height values of the 3d vectors are provided as "
"absolute measures from 0. :guilabel:`Relative` and :guilabel:`Terrain` add "
"given elevation values to the underlying terrain elevation."
msgstr ""
"The :guilabel:`Altitude clamping` can be set to :guilabel:`Absolute`, "
":guilabel:`Relative` or :guilabel:`Terrain`. The :guilabel:`Absolute` "
"setting can be used when height values of the 3d vectors are provided as "
"absolute measures from 0. :guilabel:`Relative` and :guilabel:`Terrain` add "
"given elevation values to the underlying terrain elevation."

#: ../../docs/user_manual/style_library/3d_symbols.rst:61
msgid ""
"Under the :guilabel:`Transformations` frame, you can apply affine "
"transformation to the symbol:"
msgstr ""
"Under the :guilabel:`Transformations` frame, you can apply affine "
"transformation to the symbol:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:64
msgid ":guilabel:`Translation` to move objects in x, y and z axis."
msgstr ":guilabel:`Translation` to move objects in x, y and z axis."

#: ../../docs/user_manual/style_library/3d_symbols.rst:65
msgid ":guilabel:`Scale` to resize the 3D shapes"
msgstr ":guilabel:`Scale` to resize the 3D shapes"

#: ../../docs/user_manual/style_library/3d_symbols.rst:66
msgid ":guilabel:`Rotation` around the x-, y- and z-axis."
msgstr ":guilabel:`Rotation` around the x-, y- and z-axis."

#: ../../docs/user_manual/style_library/3d_symbols.rst:72
msgid "Line layers"
msgstr "Line layers"

#: ../../docs/user_manual/style_library/3d_symbols.rst:79
msgid "Properties of a 3D line symbol"
msgstr "Properties of a 3D line symbol"

#: ../../docs/user_manual/style_library/3d_symbols.rst:81
msgid ""
"Beneath the :guilabel:`Width` and :guilabel:`Height` settings you can define"
" the :guilabel:`Extrusion` of the vector lines. If the lines do not have "
"z-values, you can define the 3d volumes with this setting."
msgstr ""
"Beneath the :guilabel:`Width` and :guilabel:`Height` settings you can define"
" the :guilabel:`Extrusion` of the vector lines. If the lines do not have "
"z-values, you can define the 3d volumes with this setting."

#: ../../docs/user_manual/style_library/3d_symbols.rst:84
msgid ""
"With the :guilabel:`Altitude clamping` you define the position of the 3D "
"lines relative to the underlying terrain surface, if you have included "
"raster elevation data or other 3D vectors."
msgstr ""
"With the :guilabel:`Altitude clamping` you define the position of the 3D "
"lines relative to the underlying terrain surface, if you have included "
"raster elevation data or other 3D vectors."

#: ../../docs/user_manual/style_library/3d_symbols.rst:87
msgid ""
"The :guilabel:`Altitude binding` defines how the feature is clamped to the "
"terrain. Either every :guilabel:`Vertex` of the feature will be clamped to "
"the terrain or this will be done by the :guilabel:`Centroid`."
msgstr ""
"The :guilabel:`Altitude binding` defines how the feature is clamped to the "
"terrain. Either every :guilabel:`Vertex` of the feature will be clamped to "
"the terrain or this will be done by the :guilabel:`Centroid`."

#: ../../docs/user_manual/style_library/3d_symbols.rst:90
msgid "It is possible to |checkbox|:guilabel:`Render as simple 3D lines`."
msgstr "It is possible to |checkbox|:guilabel:`Render as simple 3D lines`."

#: ../../docs/user_manual/style_library/3d_symbols.rst:202
msgid "checkbox"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:96
msgid "Polygon Layers"
msgstr "Polygon Layers"

#: ../../docs/user_manual/style_library/3d_symbols.rst:103
msgid "Properties of a 3D polygon symbol"
msgstr "Properties of a 3D polygon symbol"

#: ../../docs/user_manual/style_library/3d_symbols.rst:105
msgid ""
"As for the other ones, :guilabel:`Height` can be defined in CRS units. You "
"can also use the |dataDefine| button to overwrite the value with a custom "
"expression, a variable or an entry of the attribute table"
msgstr ""
"As for the other ones, :guilabel:`Height` can be defined in CRS units. You "
"can also use the |dataDefine| button to overwrite the value with a custom "
"expression, a variable or an entry of the attribute table"

#: ../../docs/user_manual/style_library/3d_symbols.rst:204
msgid "dataDefine"
msgstr ""

#: ../../docs/user_manual/style_library/3d_symbols.rst:109
msgid ""
"Again, :guilabel:`Extrusion` is possible for missing z-values. Also for the "
"extrusion you can use the |dataDefine| button in order to use the values of "
"the vector layer and have different results for each polygon:"
msgstr ""
"Again, :guilabel:`Extrusion` is possible for missing z-values. Also for the "
"extrusion you can use the |dataDefine| button in order to use the values of "
"the vector layer and have different results for each polygon:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:116
msgid "Data Defined Extrusion"
msgstr "Data Defined Extrusion"

#: ../../docs/user_manual/style_library/3d_symbols.rst:118
msgid ""
"The :guilabel:`Altitude clamping`, :guilabel:`Altitude binding` can be "
"defined as explained above."
msgstr ""
"The :guilabel:`Altitude clamping`, :guilabel:`Altitude binding` can be "
"defined as explained above."

#: ../../docs/user_manual/style_library/3d_symbols.rst:120
msgid "The :guilabel:`Culling mode` to apply to the symbol; it can be:"
msgstr "The :guilabel:`Culling mode` to apply to the symbol; it can be:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:122
msgid ""
":guilabel:`No Culling`: this can help to avoid seemingly missing surfaces "
"when polygonZ/multipatch data do not have consistent ordering of vertices "
"(e.g. all clock-wise or counter clock-wise)"
msgstr ""
":guilabel:`No Culling`: this can help to avoid seemingly missing surfaces "
"when polygonZ/multipatch data do not have consistent ordering of vertices "
"(e.g. all clock-wise or counter clock-wise)"

#: ../../docs/user_manual/style_library/3d_symbols.rst:125
msgid ":guilabel:`Front`"
msgstr ":guilabel:`Front`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:126
msgid "or :guilabel:`Back`"
msgstr "or :guilabel:`Back`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:127
msgid ""
"The :guilabel:`Rendered facade` determines the faces to display. Possible "
"values are :guilabel:`No facades`, :guilabel:`Walls`, :guilabel:`Roofs`, or "
":guilabel:`Walls and roofs`"
msgstr ""
"The :guilabel:`Rendered facade` determines the faces to display. Possible "
"values are :guilabel:`No facades`, :guilabel:`Walls`, :guilabel:`Roofs`, or "
":guilabel:`Walls and roofs`"

#: ../../docs/user_manual/style_library/3d_symbols.rst:130
msgid ""
"|checkbox| :guilabel:`Add back faces`: for each triangle, creates both front"
" and back face with correct normals - at the expense of increased number of "
"vertex data. This option can be used to fix shading issues (e.g., due to "
"data with inconsistent order of vertices)."
msgstr ""
"|checkbox| :guilabel:`Add back faces`: for each triangle, creates both front"
" and back face with correct normals - at the expense of increased number of "
"vertex data. This option can be used to fix shading issues (e.g., due to "
"data with inconsistent order of vertices)."

#: ../../docs/user_manual/style_library/3d_symbols.rst:134
msgid ""
"|checkbox| :guilabel:`Invert normals (experimental)`: can be useful for "
"fixing clockwise/counter-clockwise face vertex orders"
msgstr ""
"|checkbox| :guilabel:`Invert normals (experimental)`: can be useful for "
"fixing clockwise/counter-clockwise face vertex orders"

#: ../../docs/user_manual/style_library/3d_symbols.rst:137
msgid ""
"Display of the |checkbox| :guilabel:`Edges` of the symbols can be enabled "
"and assigned a :guilabel:`Width` and :guilabel:`Color`."
msgstr ""
"Display of the |checkbox| :guilabel:`Edges` of the symbols can be enabled "
"and assigned a :guilabel:`Width` and :guilabel:`Color`."

#: ../../docs/user_manual/style_library/3d_symbols.rst:140
msgid "**Combination for best rendering of 3D data**"
msgstr "**Combination for best rendering of 3D data**"

#: ../../docs/user_manual/style_library/3d_symbols.rst:142
msgid ""
":guilabel:`Culling mode`, :guilabel:`Add back faces` and :guilabel:`Invert "
"normals` are all meant to fix the look of 3D data if it does not look right."
" Typically when loading some data, it is best to first try ``culling "
"mode=back`` and ``add back faces=disabled`` - it is the most efficient. If "
"the rendering does not look correct, try ``add back faces=enabled`` and keep"
" ``culling mode=no culling``. Other combinations are more advanced and "
"useful only in some scenarios based on how mixed up is the input dataset."
msgstr ""
":guilabel:`Culling mode`, :guilabel:`Add back faces` and :guilabel:`Invert "
"normals` are all meant to fix the look of 3D data if it does not look right."
" Typically when loading some data, it is best to first try ``culling "
"mode=back`` and ``add back faces=disabled`` - it is the most efficient. If "
"the rendering does not look correct, try ``add back faces=enabled`` and keep"
" ``culling mode=no culling``. Other combinations are more advanced and "
"useful only in some scenarios based on how mixed up is the input dataset."

#: ../../docs/user_manual/style_library/3d_symbols.rst:153
msgid "Shading the texture"
msgstr "Shading the texture"

#: ../../docs/user_manual/style_library/3d_symbols.rst:155
msgid ""
"Shading helps you reveal 3d details of objects which may otherwise be hidden"
" due to the scene's lighting. Ultimately, it's an easier material to work "
"with as you don't need to worry about setting up appropriate scene lighting "
"in order to visualise features."
msgstr ""
"Shading helps you reveal 3d details of objects which may otherwise be hidden"
" due to the scene's lighting. Ultimately, it's an easier material to work "
"with as you don't need to worry about setting up appropriate scene lighting "
"in order to visualise features."

#: ../../docs/user_manual/style_library/3d_symbols.rst:160
msgid ""
"Various techniques of shading are used in QGIS and their availability "
"depends on the geometry type of the symbol:"
msgstr ""
"Various techniques of shading are used in QGIS and their availability "
"depends on the geometry type of the symbol:"

#: ../../docs/user_manual/style_library/3d_symbols.rst:176
msgid ""
":guilabel:`CAD (Gooch)`: this technique allows shading to occur only in mid-"
"tones so that edge lines and highlights remain visually prominent. Along "
"with the :guilabel:`Diffuse`, :guilabel:`Specular`, :guilabel:`Shininess` "
"options, you need to provide a :guilabel:`Warm` color (for surface facing "
"toward the light) and a :guilabel:`Cool` color (for the ones facing away). "
"Also, the relative contributions to the cool and warm colors by the diffuse "
"color are controlled by :guilabel:`Alpha` and :guilabel:`Beta` properties "
"respectively. See also https://en.wikipedia.org/wiki/Gooch_shading"
msgstr ""
":guilabel:`CAD (Gooch)`: this technique allows shading to occur only in mid-"
"tones so that edge lines and highlights remain visually prominent. Along "
"with the :guilabel:`Diffuse`, :guilabel:`Specular`, :guilabel:`Shininess` "
"options, you need to provide a :guilabel:`Warm` color (for surface facing "
"toward the light) and a :guilabel:`Cool` color (for the ones facing away). "
"Also, the relative contributions to the cool and warm colors by the diffuse "
"color are controlled by :guilabel:`Alpha` and :guilabel:`Beta` properties "
"respectively. See also https://en.wikipedia.org/wiki/Gooch_shading"

#: ../../docs/user_manual/style_library/3d_symbols.rst:184
msgid ":guilabel:`Embedded Textures` with 3D models shape"
msgstr ":guilabel:`Embedded Textures` with 3D models shape"

#: ../../docs/user_manual/style_library/3d_symbols.rst:188
msgid "Application example"
msgstr "Application example"
