# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# Içana Evelen de Oliveira Tavares <isis.vicktavares@gmail.com>, 2020
# Aline Furlanetto Viero <afviero@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 01:57+0200\n"
"PO-Revision-Date: 2020-03-16 19:23+0000\n"
"Last-Translator: Aline Furlanetto Viero <afviero@gmail.com>, 2020\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/qgis/teams/6144/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:11
msgid ""
"The code snippets on this page need the following imports if you're outside "
"the pyqgis console:"
msgstr ""
"Os trechos de código desta página precisam das seguintes importações se você"
" estiver fora do console do pyqgis:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:53
msgid "Using Vector Layers"
msgstr "Usando Camadas Vetoriais"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:58
msgid ""
"This section summarizes various actions that can be done with vector layers."
msgstr ""
"Esta seção lista várias operações que podem ser realizadas com camadas "
"vetoriais."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:60
msgid ""
"Most work here is based on the methods of the :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>` class."
msgstr ""
"A maioria dos trabalhos aqui é baseada nos métodos da classe "
":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:66
msgid "Retrieving information about attributes"
msgstr "Recuperando informações sobre atributos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:68
msgid ""
"You can retrieve information about the fields associated with a vector layer"
" by calling :meth:`fields() <qgis.core.QgsVectorLayer.fields>` on a "
":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` object:"
msgstr ""
"Você pode recuperar informações sobre os campos associados a uma camada "
"vetorial chamando :meth:`fields() <qgis.core.QgsVectorLayer.fields>` em um "
"objeto :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:89
msgid "Iterating over Vector Layer"
msgstr "Iterando sobre Camada Vetorial"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:91
msgid ""
"Iterating over the features in a vector layer is one of the most common "
"tasks. Below is an example of the simple basic code to perform this task and"
" showing some information about each feature. The ``layer`` variable is "
"assumed to have a :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` object."
msgstr ""
"A iteração sobre as feições em uma camada vetorial é uma das tarefas mais "
"comuns. Abaixo está um exemplo do código básico simples para executar esta "
"tarefa e mostrando algumas informações sobre cada feição. Supõe-se que a "
"variável ``layer`` tenha um objeto :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:150
msgid "Selecting features"
msgstr "Selecionando características"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:152
msgid ""
"In QGIS desktop, features can be selected in different ways: the user can "
"click on a feature, draw a rectangle on the map canvas or use an expression "
"filter. Selected features are normally highlighted in a different color "
"(default is yellow) to draw user's attention on the selection."
msgstr ""
"Na área de trabalho do QGIS, as feições podem ser selecionadas de diferentes"
" maneiras: o usuário pode clicar em uma feição, desenhar um retângulo na "
"tela do mapa ou usar um filtro de expressão. As feições selecionadas "
"normalmente são destacadas em uma cor diferente (o padrão é amarelo) para "
"chamar a atenção do usuário na seleção."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:157
msgid ""
"Sometimes it can be useful to programmatically select features or to change "
"the default color."
msgstr ""
"Às vezes, pode ser útil selecionar recursos programaticamente ou alterar a "
"cor padrão."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:160
msgid ""
"To select all the features, the :meth:`selectAll() "
"<qgis.core.QgsVectorLayer.selectAll>` method can be used:"
msgstr ""
"Para selecionar todas as feições, o método :meth:`selectAll() "
"<qgis.core.QgsVectorLayer.selectAll>` pode ser usado:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:168
msgid ""
"To select using an expression, use the :meth:`selectByExpression() "
"<qgis.core.QgsVectorLayer.selectByExpression>` method:"
msgstr ""
"Para selecionar usando uma expressão, use o método "
":meth:`selectByExpression() <qgis.core.QgsVectorLayer.selectByExpression>`:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:177
msgid ""
"To change the selection color you can use :meth:`setSelectionColor() "
"<qgis.gui.QgsMapCanvas.setSelectionColor>` method of :class:`QgsMapCanvas "
"<qgis.gui.QgsMapCanvas>` as shown in the following example:"
msgstr ""
"Para alterar a cor da seleção, você pode usar o método "
":meth:`setSelectionColor() <qgis.gui.QgsMapCanvas.setSelectionColor>` de "
":class:`QgsMapCanvas <qgis.gui.QgsMapCanvas>`, como mostrado no exemplo a "
"seguir:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:185
msgid ""
"To add features to the selected features list for a given layer, you can "
"call :meth:`select() <qgis.core.QgsVectorLayer.select>` passing to it the "
"list of features IDs:"
msgstr ""
"Para adicionar recursos à lista de recursos selecionados para uma "
"determinada camada, você pode chamar :meth:`select() "
"<qgis.core.QgsVectorLayer.select>` passando para ele a lista de IDs de "
"recursos:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:200
msgid "To clear the selection:"
msgstr "Para limpar a seleção:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:207
msgid "Accessing attributes"
msgstr "Acessando atributos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:209
msgid "Attributes can be referred to by their name:"
msgstr "Os atributos podem ser referidos pelo seu nome:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:219
msgid ""
"Alternatively, attributes can be referred to by index. This is a bit faster "
"than using the name. For example, to get the second attribute:"
msgstr ""
"Como alternativa, os atributos podem ser referidos pelo índice. Isso é um "
"pouco mais rápido do que usar o nome. Por exemplo, para obter o segundo "
"atributo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:233
msgid "Iterating over selected features"
msgstr "Iteração sobre os feições selecionadas"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:235
msgid ""
"If you only need selected features, you can use the "
":meth:`selectedFeatures() <qgis.core.QgsVectorLayer.selectedFeatures>` "
"method from the vector layer:"
msgstr ""
"Se você precisar apenas de feições selecionadas, poderá usar o método "
":meth:`selectedFeatures() <qgis.core.QgsVectorLayer.selectedFeatures>` da "
"camada vetorial:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:247
msgid "Iterating over a subset of features"
msgstr "Iterando sobre um subconjunto de feições"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:249
msgid ""
"If you want to iterate over a given subset of features in a layer, such as "
"those within a given area, you have to add a :class:`QgsFeatureRequest "
"<qgis.core.QgsFeatureRequest>` object to the :meth:`getFeatures() "
"<qgis.core.QgsVectorLayer.getFeatures>` call. Here's an example:"
msgstr ""
"Se você deseja iterar sobre um determinado subconjunto de feições em uma "
"camada, como aquelas dentro de uma determinada área, você deve adicionar um "
"objeto :class:`QgsFeatureRequest <qgis.core.QgsFeatureRequest>` ao "
":meth:`getFeatures() <qgis.core.QgsVectorLayer.getFeatures>` chamado. Aqui "
"está um exemplo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:263
msgid ""
"For the sake of speed, the intersection is often done only using feature’s "
"bounding box. There is however a flag ``ExactIntersect`` that makes sure "
"that only intersecting features will be returned:"
msgstr ""
"Por uma questão de velocidade, a interseção geralmente é feita apenas usando"
" a caixa delimitadora da feição. No entanto, existe um sinalizador "
"``ExactIntersect`` que garante que apenas as feições que se intersectam "
"serão retornadas:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:272
msgid ""
"With :meth:`setLimit() <qgis.core.QgsFeatureRequest.setLimit>` you can limit"
" the number of requested features. Here's an example:"
msgstr ""
"Com :meth:`setLimit() <qgis.core.QgsFeatureRequest.setLimit>` você pode "
"limitar o número de feições solicitadas. Aqui está um exemplo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:286
msgid ""
"If you need an attribute-based filter instead (or in addition) of a spatial "
"one like shown in the examples above, you can build a :class:`QgsExpression "
"<qgis.core.QgsExpression>` object and pass it to the "
":class:`QgsFeatureRequest <qgis.core.QgsFeatureRequest>` constructor. Here's"
" an example:"
msgstr ""
"Se você precisar de um filtro baseado em atributo em vez (ou adicionalmente)"
" de um filtro espacial, como mostrado nos exemplos acima, poderá criar um "
"objeto :class:`QgsExpression <qgis.core.QgsExpression>` e passá-lo para o "
"construtor :classe:`QgsFeatureRequest <qgis.core.QgsFeatureRequest>`. Aqui "
"está um exemplo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:299
msgid ""
"See :ref:`expressions` for the details about the syntax supported by "
":class:`QgsExpression <qgis.core.QgsExpression>`."
msgstr ""
"Veja :ref:`expression` para obter detalhes sobre a sintaxe suportada por "
":class:`QgsExpression <qgis.core.QgsExpression>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:301
msgid ""
"The request can be used to define the data retrieved for each feature, so "
"the iterator returns all features, but returns partial data for each of "
"them."
msgstr ""
"A solicitação pode ser usada para definir os dados recuperados para cada "
"feição, portanto, o iterador retorna todos as feições, mas retorna dados "
"parciais para cada uma delas."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:326
msgid "Modifying Vector Layers"
msgstr "Modificando Camadas Vetoriais"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:328
msgid ""
"Most vector data providers support editing of layer data. Sometimes they "
"support just a subset of possible editing actions. Use the "
":meth:`capabilities() <qgis.core.QgsVectorDataProvider.capabilities>` "
"function to find out what set of functionality is supported."
msgstr ""
"A maioria dos provedores de dados vetoriais suporta a edição de dados da "
"camada. Às vezes, eles suportam apenas um subconjunto de possíveis ações de "
"edição. Use a função :meth:`capacidades() "
"<qgis.core.QgsVectorDataProvider.capabilities>` para descobrir qual conjunto"
" de funcionalidades é suportado."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:344
msgid ""
"For a list of all available capabilities, please refer to the :class:`API "
"Documentation of QgsVectorDataProvider <qgis.core.QgsVectorDataProvider>`."
msgstr ""
"Para obter uma lista de todos os recursos disponíveis, consulte a "
":class:`API Documentation of QgsVectorDataProvider "
"<qgis.core.QgsVectorDataProvider>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:348
msgid ""
"To print layer's capabilities textual description in a comma separated list "
"you can use :meth:`capabilitiesString() "
"<qgis.core.QgsVectorDataProvider.capabilitiesString>` as in the following "
"example:"
msgstr ""
"Para imprimir a descrição textual dos recursos da camada em uma lista "
"separada por vírgulas, você pode usar :meth:`capabilitiesString() "
"<qgis.core.QgsVectorDataProvider.capabilitiesString>` como no exemplo a "
"seguir:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:361
msgid ""
"By using any of the following methods for vector layer editing, the changes "
"are directly committed to the underlying data store (a file, database etc). "
"In case you would like to do only temporary changes, skip to the next "
"section that explains how to do :ref:`modifications with editing buffer "
"<editing-buffer>`."
msgstr ""
"Ao usar qualquer um dos métodos a seguir para edição da camada vetorial, as "
"alterações são confirmadas diretamente no armazenamento de dados subjacente "
"(um arquivo, banco de dados etc.). Caso você deseje fazer apenas alterações "
"temporárias, pule para a próxima seção que explica como fazer "
":ref:`modifications with editing buffer <editing-buffer>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:369
msgid ""
"If you are working inside QGIS (either from the console or from a plugin), "
"it might be necessary to force a redraw of the map canvas in order to see "
"the changes you've done to the geometry, to the style or to the attributes:"
msgstr ""
"Se você estiver trabalhando no QGIS (no console ou em um complemento), pode "
"ser necessário forçar um redesenho da tela do mapa para ver as alterações "
"feitas na geometria, no estilo ou nos atributos:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:384
msgid "Add Features"
msgstr "Adicionar feições"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:386
msgid ""
"Create some :class:`QgsFeature <qgis.core.QgsFeature>` instances and pass a "
"list of them to provider's :meth:`addFeatures() "
"<qgis.core.QgsVectorDataProvider.addFeatures>` method. It will return two "
"values: result (true/false) and list of added features (their ID is set by "
"the data store)."
msgstr ""
"Crie algumas instâncias :class:`QgsFeature <qgis.core.QgsFeature>` e passe "
"uma lista delas para o método do provedor :meth:`addFeatures() "
"<qgis.core.QgsVectorDataProvider.addFeatures>` do provedor. Ele retornará "
"dois valores: resultado (verdadeiro/falso) e lista de recursos adicionados "
"(seu ID é definido pelo armazenamento de dados)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:390
msgid ""
"To set up the attributes of the feature, you can either initialize the "
"feature passing a :class:`QgsFields <qgis.core.QgsFields>` object (you can "
"obtain that from the :meth:`fields() <qgis.core.QgsVectorLayer.fields>` "
"method of the vector layer) or call :meth:`initAttributes() "
"<qgis.core.QgsFeature.initAttributes>` passing the number of fields you want"
" to be added."
msgstr ""
"Para configurar os atributos da feição, você pode inicializar a feição "
"passando um objeto :class:`QgsFields <qgis.core.QgsFields>` (você pode obtê-"
"lo no método :meth:`fields() <qgis.core. QgsVectorLayer.fields>` da camada "
"vetorial) ou chame :meth:`initAttributes() "
"<qgis.core.QgsFeature.initAttributes>` passando o número de campos que você "
"deseja adicionar."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:409
msgid "Delete Features"
msgstr "Excluir feições"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:411
msgid "To delete some features, just provide a list of their feature IDs."
msgstr ""
"Para excluir algumas feições, basta fornecer uma lista de seus IDs de "
"feições."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:419
msgid "Modify Features"
msgstr "Modificar Feições"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:421
msgid ""
"It is possible to either change feature's geometry or to change some "
"attributes. The following example first changes values of attributes with "
"index 0 and 1, then it changes the feature's geometry."
msgstr ""
"É possível alterar a geometria da feição ou alterar alguns atributos. O "
"exemplo a seguir altera primeiro os valores dos atributos com os índices 0 e"
" 1, depois altera a geometria da feição."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:438
msgid "**Favor QgsVectorLayerEditUtils class for geometry-only edits**"
msgstr ""
"**Preferindo a classe QgsVectorLayerEditUtils para edições somente de "
"geometria**"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:440
msgid ""
"If you only need to change geometries, you might consider using the "
":class:`QgsVectorLayerEditUtils <qgis.core.QgsVectorLayerEditUtils>` which "
"provides some useful methods to edit geometries (translate, insert or move "
"vertex, etc.)."
msgstr ""
"Se você precisar alterar apenas geometrias, considere usar "
":class:`QgsVectorLayerEditUtils <qgis.core.QgsVectorLayerEditUtils>`, que "
"fornece alguns métodos úteis para editar geometrias (traduzir, inserir ou "
"mover vértices, etc.)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:447
msgid "Modifying Vector Layers with an Editing Buffer"
msgstr "Modificando Camadas Vetoriais com um Buffer"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:449
msgid ""
"When editing vectors within QGIS application, you have to first start "
"editing mode for a particular layer, then do some modifications and finally "
"commit (or rollback) the changes. All the changes you make are not written "
"until you commit them --- they stay in layer's in-memory editing buffer. It "
"is possible to use this functionality also programmatically --- it is just "
"another method for vector layer editing that complements the direct usage of"
" data providers. Use this option when providing some GUI tools for vector "
"layer editing, since this will allow user to decide whether to "
"commit/rollback and allows the usage of undo/redo. When changes are "
"commited, all changes from the editing buffer are saved to data provider."
msgstr ""
"Ao editar vetores no aplicativo QGIS, você deve primeiro iniciar o modo de "
"edição para uma camada específica, fazer algumas modificações e finalmente "
"confirmar (ou retroceder) as alterações. Todas as alterações que você faz "
"não são gravadas até que você as confirme - elas permanecem no buffer de "
"edição na memória da camada. É possível usar essa funcionalidade também "
"usando programação - é apenas outro método para edição de camada vetorial "
"que complementa o uso direto de provedores de dados. Use esta opção ao "
"fornecer algumas ferramentas da GUI para a edição da camada vetorial, pois "
"isso permitirá ao usuário decidir se deve confirmar/retroceder e permite o "
"uso de desfazer/refazer. Quando as alterações são confirmadas, todas as "
"alterações do buffer de edição são salvas no provedor de dados."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:460
msgid ""
"The methods are similar to the ones we have seen in the provider, but they "
"are called on the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` object "
"instead."
msgstr ""
"Os métodos são semelhantes aos que vimos no provedor, mas são chamados no "
"objeto :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:464
msgid ""
"For these methods to work, the layer must be in editing mode. To start the "
"editing mode, use the :meth:`startEditing() "
"<qgis.core.QgsVectorLayer.startEditing>` method. To stop editing, use the "
":meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` or "
":meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` methods. The first "
"one will commit all your changes to the data source, while the second one "
"will discard them and will not modify the data source at all."
msgstr ""
"Para que esses métodos funcionem, a camada deve estar no modo de edição. "
"Para iniciar o modo de edição, use o método :meth:`startEditing() "
"<qgis.core.QgsVectorLayer.startEditing>`. Para parar a edição, use os "
"métodos :meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` ou "
":meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>`. O primeiro "
"confirmará todas as suas alterações na fonte de dados, enquanto o segundo as"
" descartará e não modificará a fonte de dados."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:471
msgid ""
"To find out whether a layer is in editing mode, use the :meth:`isEditable() "
"<qgis.core.QgsVectorLayer.isEditable>` method."
msgstr ""
"Para descobrir se uma camada está no modo de edição, use o método "
":meth:`isEditable() <qgis.core.QgsVectorLayer.isEditable>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:474
msgid ""
"Here you have some examples that demonstrate how to use these editing "
"methods."
msgstr ""
"Aqui você tem alguns exemplos que demonstram como usar esses métodos de "
"edição."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:502
msgid ""
"In order to make undo/redo work properly, the above mentioned calls have to "
"be wrapped into undo commands. (If you do not care about undo/redo and want "
"to have the changes stored immediately, then you will have easier work by "
":ref:`editing with data provider <editing>`.)"
msgstr ""
"Para desfazer/refazer o trabalho corretamente, os chamados acima mencionados"
" têm de ser envoltos em comandos de desfazer. (Se você não se importa com "
"desfazer/refazer e quer ter as mudanças armazenadas imediatamente, então "
"você vai ter o trabalho mais fácil :ref:`editing with data provider "
"<editing>`.)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:507
msgid "Here is how you can use the undo functionality:"
msgstr "Aqui está como você pode usar a funcionalidade desfazer:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:524
msgid ""
"The :meth:`beginEditCommand() <qgis.core.QgsVectorLayer.beginEditCommand>` "
"method will create an internal \"active\" command and will record subsequent"
" changes in vector layer. With the call to :meth:`endEditCommand() "
"<qgis.core.QgsVectorLayer.endEditCommand>` the command is pushed onto the "
"undo stack and the user will be able to undo/redo it from GUI. In case "
"something went wrong while doing the changes, the "
":meth:`destroyEditCommand() <qgis.core.QgsVectorLayer.destroyEditCommand>` "
"method will remove the command and rollback all changes done while this "
"command was active."
msgstr ""
"O método :meth:`beginEditCommand() "
"<qgis.core.QgsVectorLayer.beginEditCommand>` cria um comando interno "
"\"ativo\" e registra as alterações subsequentes na camada vetorial. Com o "
"chamado para :meth:`endEditCommand() "
"<qgis.core.QgsVectorLayer.endEditCommand>` o comando é enviado para a pilha "
"de desfazer e o usuário poderá desfazê-lo/refazê-lo da GUI. Caso algo dê "
"errado ao fazer as alterações, o método :meth:`destroyEditCommand() "
"<qgis.core.QgsVectorLayer.destroyEditCommand>` removerá o comando e "
"reverterá todas as alterações feitas enquanto este comando estava ativo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:531
msgid ""
"You can also use the :code:`with edit(layer)`-statement to wrap commit and "
"rollback into a more semantic code block as shown in the example below:"
msgstr ""
"Você também pode usar o :code:`with edit(layer)` -statement para agrupar "
"commit e rollback em um bloco de código mais semântico, como mostrado no "
"exemplo abaixo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:542
msgid ""
"This will automatically call :meth:`commitChanges() "
"<qgis.core.QgsVectorLayer.commitChanges>` in the end. If any exception "
"occurs, it will :meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` all "
"the changes. In case a problem is encountered within :meth:`commitChanges() "
"<qgis.core.QgsVectorLayer.commitChanges>` (when the method returns False) a "
":class:`QgsEditError <qgis.core.QgsEditError>` exception will be raised."
msgstr ""
"Isso chamará automaticamente :meth:`commitChanges() "
"<qgis.core.QgsVectorLayer.commitChanges>` no final. Se ocorrer alguma "
"exceção, ele irá :meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` "
"todas as alterações. Caso seja encontrado um problema em "
":meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` (quando o "
"método retornar Falso) a exceção a :class:`QgsEditError "
"<qgis.core.QgsEditError>` será gerada."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:548
msgid "Adding and Removing Fields"
msgstr "Adicionando e Removendo Campos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:550
msgid ""
"To add fields (attributes), you need to specify a list of field definitions."
" For deletion of fields just provide a list of field indexes."
msgstr ""
"Para adicionar campos (atributos), você precisa especificar uma lista de "
"definições de campos. Para exclusão de campos, forneça apenas uma lista de "
"índices de campos."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:581
msgid ""
"After adding or removing fields in the data provider the layer's fields need"
" to be updated because the changes are not automatically propagated."
msgstr ""
"Após adicionar ou remover campos no provedor de dados, os campos da camada "
"precisam ser atualizados porque as alterações não são propagadas "
"automaticamente."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:588
msgid "**Directly save changes using** ``with`` **based command**"
msgstr ""
"**Salvando as alterações diretamente usando o comando baseado em "
"**``with``** **"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:590
msgid ""
"Using ``with edit(layer):`` the changes will be commited automatically "
"calling :meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` at "
"the end. If any exception occurs, it will :meth:`rollBack() "
"<qgis.core.QgsVectorLayer.rollBack>` all the changes. See :ref:`editing-"
"buffer`."
msgstr ""
"Usando ``with edit(layer):`` as alterações serão confirmadas automaticamente"
" chamando :meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` "
"no final. Se ocorrer alguma exceção, ele irá :meth:`rollBack () "
"<qgis.core.QgsVectorLayer.rollBack>` todas as alterações. Veja :ref"
":`editing-buffer`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:598
msgid "Using Spatial Index"
msgstr "Utilizando Índices Espaciais"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:600
msgid ""
"Spatial indexes can dramatically improve the performance of your code if you"
" need to do frequent queries to a vector layer. Imagine, for instance, that "
"you are writing an interpolation algorithm, and that for a given location "
"you need to know the 10 closest points from a points layer, in order to use "
"those point for calculating the interpolated value. Without a spatial index,"
" the only way for QGIS to find those 10 points is to compute the distance "
"from each and every point to the specified location and then compare those "
"distances. This can be a very time consuming task, especially if it needs to"
" be repeated for several locations. If a spatial index exists for the layer,"
" the operation is much more effective."
msgstr ""
"Os índices espaciais podem melhorar drasticamente o desempenho do seu "
"código, se você precisar fazer consultas frequentes a uma camada vetorial. "
"Imagine, por exemplo, que você esteja escrevendo um algoritmo de "
"interpolação e que, para um determinado local, precise conhecer os 10 pontos"
" mais próximos de uma camada de pontos, a fim de usá-los para calcular o "
"valor interpolado. Sem um índice espacial, a única maneira de o QGIS "
"encontrar esses 10 pontos é calcular a distância de cada ponto até o local "
"especificado e comparar essas distâncias. Isso pode ser uma tarefa que "
"consome muito tempo, especialmente se precisar ser repetida em vários "
"locais. Se existir um índice espacial para a camada, a operação será muito "
"mais eficaz."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:611
msgid ""
"Think of a layer without a spatial index as a telephone book in which "
"telephone numbers are not ordered or indexed. The only way to find the "
"telephone number of a given person is to read from the beginning until you "
"find it."
msgstr ""
"Pense em uma camada sem um índice espacial como uma lista telefônica na qual"
" os números de telefone não são ordenados ou indexados. A única maneira de "
"encontrar o número de telefone de uma determinada pessoa é ler desde o "
"início até encontrá-lo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:615
msgid ""
"Spatial indexes are not created by default for a QGIS vector layer, but you "
"can create them easily. This is what you have to do:"
msgstr ""
"Os índices espaciais não são criados por padrão para uma camada vetorial "
"QGIS, mas você pode criá-los facilmente. Isto é o que você precisa fazer:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:618
msgid ""
"create spatial index using the :class:`QgsSpatialIndex() "
"<qgis.core.QgsSpatialIndex>` class:"
msgstr ""
"crie índice espacial usando a classe :class:`QgsSpatialIndex() "
"<qgis.core.QgsSpatialIndex>`:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:625
msgid ""
"add features to index --- index takes :class:`QgsFeature "
"<qgis.core.QgsFeature>` object and adds it to the internal data structure. "
"You can create the object manually or use one from a previous call to the "
"provider's :meth:`getFeatures() "
"<qgis.core.QgsVectorDataProvider.getFeatures>` method."
msgstr ""
"adicione feições ao índice --- o indíce pega o objeto :class:`QgsFeature "
"<qgis.core.QgsFeature>` e o adiciona à estrutura de dados interna. Você pode"
" criar o objeto manualmente ou usar um de uma chamada anterior para o método"
" :meth:`getFeatures() <qgis.core.QgsVectorDataProvider.getFeatures>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:634
msgid ""
"alternatively, you can load all features of a layer at once using bulk "
"loading"
msgstr ""
"Como alternativa, você pode carregar todas as feições de uma camada ao mesmo"
" tempo usando o carregamento em massa"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:640
msgid "once spatial index is filled with some values, you can do some queries"
msgstr ""
"uma vez que o índice espacial é preenchido com alguns valores, você pode "
"fazer algumas consultas"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:654
msgid "Creating Vector Layers"
msgstr "Criando Camadas Vetoriais"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:656
msgid "There are several ways to generate a vector layer dataset:"
msgstr ""
"Existem várias maneiras de gerar um conjunto de dados de camada vetorial:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:658
msgid ""
"the :class:`QgsVectorFileWriter <qgis.core.QgsVectorFileWriter>` class: A "
"convenient class for writing vector files to disk, using either a static "
"call to :meth:`writeAsVectorFormat() "
"<qgis.core.QgsVectorFileWriter.writeAsVectorFormat>` which saves the whole "
"vector layer or creating an instance of the class and issue calls to "
":meth:`addFeature() <qgis.core.QgsVectorFileWriter.addFeature>`. This class "
"supports all the vector formats that OGR supports (GeoPackage, Shapefile, "
"GeoJSON, KML and others)."
msgstr ""
"a classe :class:`QgsVectorFileWriter <qgis.core.QgsVectorFileWriter>`: Uma "
"classe conveniente para gravar arquivos vetoriais em disco, usando uma "
"chamada estática para :meth:`writeAsVectorFormat() "
"<qgis.core.QgsVectorFileWriter.writeAsVectorFormat>` salva a camada vetorial"
" inteira ou cria uma instância da classe e emite chamadas para "
":meth:`addFeature() <qgis.core.QgsVectorFileWriter.addFeature>`. Esta classe"
" suporta todos os formatos vetoriais suportados pelo OGR (GeoPackage, "
"Shapefile, GeoJSON, KML e outros)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:666
msgid ""
"the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` class: instantiates a"
" data provider that interprets the supplied path (url) of the data source to"
" connect to and access the data. It can be used to create temporary, memory-"
"based layers (``memory``) and connect to OGR datasets (``ogr``), databases "
"(``postgres``, ``spatialite``, ``mysql``, ``mssql``) and more (``wfs``, "
"``gpx``, ``delimitedtext``...)."
msgstr ""
"a classe :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`: instancia um "
"provedor de dados que interpreta o caminho fornecido (url) da fonte de dados"
" para conectar e acessar os dados. Ele pode ser usado para criar camadas "
"temporárias baseadas em memória (``memory``) e conectar-se a conjuntos de "
"dados OGR (``ogr``), bancos de dados (``postgres``, ``spatialite``, "
"``mysql``, ``mssql``) e mais (``wfs``, ``gpx``, ``delimitedtext``...)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:675
msgid ""
"From an instance of :class:`QgsVectorFileWriter "
"<qgis.core.QgsVectorFileWriter>`"
msgstr ""
"De uma instância de :class:`QgsVectorFileWriter "
"<qgis.core.QgsVectorFileWriter>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:740
msgid ""
"You can also convert fields to make them compatible with different formats "
"by using the  :class:`FieldValueConverter "
"<qgis.core.QgsVectorFileWriter.FieldValueConverter>`. For example, to "
"convert array variable types (e.g. in Postgres) to a text type, you can do "
"the following:"
msgstr ""
"Você também pode converter campos para torná-los compatíveis com diferentes "
"formatos usando :class:`FieldValueConverter "
"<qgis.core.QgsVectorFileWriter.FieldValueConverter>`. Por exemplo, para "
"converter tipos de variáveis ​​de matriz (por exemplo, em Postgres) em um "
"tipo de texto, você pode fazer o seguinte:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:777
msgid ""
"A destination CRS may also be specified --- if a valid instance of "
":class:`QgsCoordinateReferenceSystem "
"<qgis.core.QgsCoordinateReferenceSystem>` is passed as the fourth parameter,"
" the layer is transformed to that CRS."
msgstr ""
"Um SRC de destino também pode ser especificado --- se uma instância válida "
"de :class:`QgsCoordinateReferenceSystem "
"<qgis.core.QgsCoordinateReferenceSystem>` for passada como o quarto "
"parâmetro, a camada será transformada nesse SRC."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:781
msgid ""
"For valid driver names please call the :meth:`supportedFiltersAndFormats "
"<qgis.core.QgsVectorFileWriter.supportedFiltersAndFormats>` method or "
"consult the `supported formats by OGR`_ --- you should pass the value in the"
" \"Code\" column as the driver name."
msgstr ""
"Para nomes de driver válidos, chame o método "
":meth:`supportedFiltersAndFormats "
"<qgis.core.QgsVectorFileWriter.supportedFiltersAndFormats>` ou consulte "
"`formatos suportados pelo OGR`_ --- você deve passar o valor na coluna "
"\"Code\" como o nome do driver."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:786
msgid ""
"Optionally you can set whether to export only selected features, pass "
"further driver-specific options for creation or tell the writer not to "
"create attributes... There are a number of other (optional) parameters; see "
"the :class:`QgsVectorFileWriter <qgis.core.QgsVectorFileWriter>` "
"documentation for details."
msgstr ""
"Opcionalmente, você pode definir se deseja exportar apenas os recursos "
"selecionados, passar outras opções específicas do driver para criação ou "
"dizer ao gravador para não criar atributos... Há vários outros parâmetros "
"(opcionais); veja a documentação de :class:`QgsVectorFileWriter "
"<qgis.core.QgsVectorFileWriter>` para obter detalhes."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:793
msgid "Directly from features"
msgstr "Diretamente das feições"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:846
msgid "From an instance of :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`"
msgstr ""
"De uma instância de :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:848
msgid ""
"Among all the data providers supported by the :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>` class, let's focus on the memory-based layers. "
"Memory provider is intended to be used mainly by plugin or 3rd party app "
"developers. It does not store data on disk, allowing developers to use it as"
" a fast backend for some temporary layers."
msgstr ""
"Entre todos os provedores de dados suportados pela classe "
":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`, vamos nos concentrar nas"
" camadas baseadas em memória. O provedor de memória deve ser usado "
"principalmente por desenvolvedores de complementos ou de 3os. Ele não "
"armazena dados no disco, permitindo que os desenvolvedores os usem como um "
"backend rápido para algumas camadas temporárias."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:854
msgid "The provider supports string, int and double fields."
msgstr "O provedor suporta campos string, int e double."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:856
msgid ""
"The memory provider also supports spatial indexing, which is enabled by "
"calling the provider's :meth:`createSpatialIndex() "
"<qgis.core.QgsVectorDataProvider.createSpatialIndex>` function. Once the "
"spatial index is created you will be able to iterate over features within "
"smaller regions faster (since it's not necessary to traverse all the "
"features, only those in specified rectangle)."
msgstr ""
"O provedor de memória também suporta a indexação espacial, que é ativada "
"chamando a função :meth:`createSpatialIndex() "
"<qgis.core.QgsVectorDataProvider.createSpatialIndex>`. Depois que o índice "
"espacial for criado, você poderá iterar as feições em regiões menores mais "
"rapidamente (já que não é necessário percorrer todos as feições, apenas "
"aquelas no retângulo especificado)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:863
msgid ""
"A memory provider is created by passing ``\"memory\"`` as the provider "
"string to the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` "
"constructor."
msgstr ""
"Um provedor de memória é criado passando ``\"memory\"`` como a string do "
"provedor para o construtor :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:866
msgid ""
"The constructor also takes a URI defining the geometry type of the layer, "
"one of: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, "
"``\"MultiPoint\"``, ``\"MultiLineString\"``, ``\"MultiPolygon\"`` or "
"``\"None\"``."
msgstr ""
"O construtor também usa um URI que define o tipo de geometria da camada, um "
"dos seguintes: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, "
"``\"MultiPoint\"``, ``\"MultiLineString\"``,``\"MultiPolygon\"`` ou "
"``\"None\"``."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:870
msgid ""
"The URI can also specify the coordinate reference system, fields, and "
"indexing of the memory provider in the URI. The syntax is:"
msgstr ""
"O URI também pode especificar o sistema de referência de coordenadas, campos"
" e indexação do provedor de memória no URI. A sintaxe é:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:876
msgid "crs=definition"
msgstr "crs=definição"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:874
msgid ""
"Specifies the coordinate reference system, where definition may be any of "
"the forms accepted by :meth:`QgsCoordinateReferenceSystem.createFromString "
"<qgis.core.QgsCoordinateReferenceSystem.createFromString>`"
msgstr ""
"Especifica o sistema de referência de coordenadas, onde a definição pode ser"
" qualquer uma das formas aceitas pelo "
":meth:`QgsCoordinateReferenceSystem.createFromString "
"<qgis.core.QgsCoordinateReferenceSystem.createFromString>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:879
msgid "index=yes"
msgstr "index=yes"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:879
msgid "Specifies that the provider will use a spatial index"
msgstr "Especifica que o provedor irá usar o index espacial"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:884
msgid "field=name:type(length,precision)"
msgstr "field=name:type(length,precision)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:882
msgid ""
"Specifies an attribute of the layer.  The attribute has a name, and "
"optionally a type (integer, double, or string), length, and precision. There"
" may be multiple field definitions."
msgstr ""
"Especifica um atributo da camada. O atributo tem um nome e, opcionalmente, "
"um tipo (número inteiro, duplo ou sequência), comprimento e precisão. Pode "
"haver múltiplas definições de campo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:886
msgid "The following example of a URI incorporates all these options"
msgstr "O exemplo seguinte de URL incorpora todas estas opções "

#: ../../docs/pyqgis_developer_cookbook/vector.rst:892
msgid ""
"The following example code illustrates creating and populating a memory "
"provider"
msgstr ""
"O código de exemplo a seguir ilustra a criação e o preenchimento de um "
"provedor de memória"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:918
msgid "Finally, let's check whether everything went well"
msgstr "Finalmente, vamos verificar se tudo correu bem"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:943
msgid "Appearance (Symbology) of Vector Layers"
msgstr "Aparencia (Simbologia) de Camadas de Vetor"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:945
msgid ""
"When a vector layer is being rendered, the appearance of the data is given "
"by **renderer** and **symbols** associated with the layer.  Symbols are "
"classes which take care of drawing of visual representation of features, "
"while renderers determine what symbol will be used for a particular feature."
msgstr ""
"Quando uma camada vetorial está sendo renderizada, a aparência dos dados é "
"dada pelos **renderizador** e **símbolos** associados à camada. Símbolos são"
" classes que cuidam do desenho da representação visual de recursos, enquanto"
" os renderizadores determinam qual símbolo será usado para uma feição "
"específica."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:950
msgid "The renderer for a given layer can be obtained as shown below:"
msgstr ""
"O renderizador para uma determinada camada pode ser obtido como mostrado "
"abaixo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:956
msgid "And with that reference, let us explore it a bit"
msgstr "E com essa referência, vamos explorar um pouco"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:966
msgid ""
"There are several known renderer types available in the QGIS core library:"
msgstr ""
"Existem vários tipos conhecidos de renderizadores disponíveis na biblioteca "
"principal do QGIS:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:969
msgid "Type"
msgstr "Tipo"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:969
msgid "Class"
msgstr "Classes"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:969
msgid "Description"
msgstr "Descrição"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:971
msgid "singleSymbol"
msgstr "singleSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:971
msgid ":class:`QgsSingleSymbolRenderer <qgis.core.QgsSingleSymbolRenderer>`"
msgstr ":class:`QgsSingleSymbolRenderer <qgis.core.QgsSingleSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:971
msgid "Renders all features with the same symbol"
msgstr "Renderiza todas as características com o mesmo símbolo"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:972
msgid "categorizedSymbol"
msgstr "categorizedSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:972
msgid ""
":class:`QgsCategorizedSymbolRenderer "
"<qgis.core.QgsCategorizedSymbolRenderer>`"
msgstr ""
":class:`QgsCategorizedSymbolRenderer "
"<qgis.core.QgsCategorizedSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:972
msgid "Renders features using a different symbol for each category"
msgstr ""
"Renderiza características usando um símbolo diferente para cada categoria"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:973
msgid "graduatedSymbol"
msgstr "graduatedSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:973
msgid ""
":class:`QgsGraduatedSymbolRenderer  <qgis.core.QgsGraduatedSymbolRenderer>`"
msgstr ""
":class:`QgsGraduatedSymbolRenderer  <qgis.core.QgsGraduatedSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:973
msgid "Renders features using a different symbol for each range of values"
msgstr ""
"Renderiza caracter´sticas usando diferents símbolos para cada limite de "
"valores"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:976
msgid ""
"There might be also some custom renderer types, so never make an assumption "
"there are just these types. You can query the application's "
":class:`QgsRendererRegistry <qgis.core.QgsRendererRegistry>` to find out "
"currently available renderers:"
msgstr ""
"Também pode haver alguns tipos de renderizador personalizados, portanto, "
"nunca assuma que existem apenas esses tipos. Você pode consultar  "
":class:`QgsRendererRegistry <qgis.core.QgsRendererRegistry>` do aplicativo "
"para descobrir os renderizadores disponíveis no momento:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:988
msgid ""
"It is possible to obtain a dump of a renderer contents in text form --- can "
"be useful for debugging"
msgstr ""
"É possível obter um dump do conteúdo do renderizador em forma de texto - "
"pode ser útil para depuração"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1002
msgid "Single Symbol Renderer"
msgstr "Renderizador de símbolo único"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1004
msgid ""
"You can get the symbol used for rendering by calling :meth:`symbol() "
"<qgis.core.QgsSingleSymbolRenderer.symbol>` method and change it with "
":meth:`setSymbol() <qgis.core.QgsSingleSymbolRenderer.setSymbol>` method "
"(note for C++ devs: the renderer takes ownership of the symbol.)"
msgstr ""
"Você pode obter o símbolo usado para renderização chamando o método "
"meth:`symbol() <qgis.core.QgsSingleSymbolRenderer.symbol>` e alterá-lo com o"
" método :meth:`setSymbol() <qgis.core.QgsSingleSymbolRenderer.setSymbol>` "
"(observação para desenvolvedores do C++: o renderizador assume a propriedade"
" do símbolo.)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1008
msgid ""
"You can change the symbol used by a particular vector layer by calling "
":meth:`setSymbol() <qgis.core.QgsSingleSymbolRenderer.setSymbol>` passing an"
" instance of the appropriate symbol instance. Symbols for *point*, *line* "
"and *polygon* layers can be created by calling the :meth:`createSimple() "
"<qgis.core.QgsMarkerSymbol.createSimple>` function of the corresponding "
"classes :class:`QgsMarkerSymbol <qgis.core.QgsMarkerSymbol>`, "
":class:`QgsLineSymbol <qgis.core.QgsLineSymbol>` and :class:`QgsFillSymbol "
"<qgis.core.QgsFillSymbol>`."
msgstr ""
"Você pode alterar o símbolo usado por uma camada vetorial específica "
"chamando :meth:`setSymbol() <qgis.core.QgsSingleSymbolRenderer.setSymbol>` "
"passando uma instância da instância de símbolo apropriada. Símbolos para as "
"camadas de *ponto*, *linha* e *polígono* podem ser criados chamando a função"
" :meth:`createSimple()<qgis.core.QgsMarkerSymbol.createSimple>` das classes "
"correspondentes :class:`QgsMarkerSymbol <qgis. core.QgsMarkerSymbol>`, "
":class:`QgsLineSymbol <qgis.core.QgsLineSymbol>` e :class:`QgsFillSymbol "
"<qgis.core.QgsFillSymbol>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1015
msgid ""
"The dictionary passed to :meth:`createSimple() "
"<qgis.core.QgsMarkerSymbol.createSimple>` sets the style properties of the "
"symbol."
msgstr ""
"O dicionário passado para :meth:`createSimple() "
"<qgis.core.QgsMarkerSymbol.createSimple>` define as propriedades de estilo "
"do símbolo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1018
msgid ""
"For example you can replace the symbol used by a particular **point** layer "
"by calling :meth:`setSymbol() <qgis.core.QgsSingleSymbolRenderer.setSymbol>`"
" passing an instance of a :class:`QgsMarkerSymbol "
"<qgis.core.QgsMarkerSymbol>`, as in the following code example:"
msgstr ""
"Por exemplo, você pode substituir o símbolo usado por uma determinada camada"
" de **ponto** chamando :meth:`setSymbol() "
"<qgis.core.QgsSingleSymbolRenderer.setSymbol>` passando uma instância de "
":class:`QgsMarkerSymbol <qgis.core .QgsMarkerSymbol>`, como no seguinte "
"exemplo de código:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1029
msgid ""
"``name`` indicates the shape of the marker, and can be any of the following:"
msgstr "``name`` indica a forma do marcador e pode ser um dos seguintes:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1031
msgid "``circle``"
msgstr "``circle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1032
msgid "``square``"
msgstr "``square``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1033
msgid "``cross``"
msgstr "``cross``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1034
msgid "``rectangle``"
msgstr "``rectangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1035
msgid "``diamond``"
msgstr "``diamond``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1036
msgid "``pentagon``"
msgstr "``pentagon``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1037
msgid "``triangle``"
msgstr "``triangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1038
msgid "``equilateral_triangle``"
msgstr "``equilateral_triangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1039
msgid "``star``"
msgstr "``star``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1040
msgid "``regular_star``"
msgstr "``regular_star``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1041
msgid "``arrow``"
msgstr "``arrow``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1042
msgid "``filled_arrowhead``"
msgstr "``filled_arrowhead``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1043
msgid "``x``"
msgstr "``x``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1046
msgid ""
"To get the full list of properties for the first symbol layer of a symbol "
"instance you can follow the example code:"
msgstr ""
"Para obter a lista completa de propriedades da primeira camada de símbolo de"
" uma instância de símbolo, você pode seguir o código de exemplo:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1057
msgid "This can be useful if you want to alter some properties:"
msgstr "Isso pode ser útil se você quiser alterar algumas propriedades:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1076
msgid "Categorized Symbol Renderer"
msgstr "Renderizador de Símbolo Categorizado"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1078
msgid ""
"When using a categorized renderer, you can query and set the attribute that "
"is used for classification: use the :meth:`classAttribute() "
"<qgis.core.QgsCategorizedSymbolRenderer.classAttribute>` and "
":meth:`setClassAttribute() "
"<qgis.core.QgsCategorizedSymbolRenderer.setClassAttribute>` methods."
msgstr ""
"Ao usar um renderizador categorizado, é possível consultar e definir o "
"atributo usado para classificação usando "
":meth:`classAttribute()<qgis.core.QgsCategorizedSymbolRenderer.classAttribute>`"
" e :meth:`setClassAttribute() <qgis.core Métodos "
".QgsCategorizedSymbolRenderer.setClassAttribute>`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1081
msgid "To get a list of categories"
msgstr "Para obter uma lista de categorias"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1102
msgid ""
"Where :meth:`value() <qgis.core.QgsRendererCategory.value>` is the value "
"used for discrimination between categories, :meth:`label() "
"<qgis.core.QgsRendererCategory.label>` is a text used for category "
"description and :meth:`symbol() <qgis.core.QgsRendererCategory.symbol>` "
"method returns the assigned symbol."
msgstr ""
"Em que :meth:`value() <qgis.core.QgsRendererCategory.value>` é o valor usado"
" para discriminação entre categorias, :meth:`label() "
"<qgis.core.QgsRendererCategory.label>` é um texto usado para a descrição da "
"categoria e :meth:`symbol() <qgis.core.QgsRendererCategory.symbol>` retorna "
"o símbolo atribuído."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1106
msgid ""
"The renderer usually stores also original symbol and color ramp which were "
"used for the classification: :meth:`sourceColorRamp() "
"<qgis.core.QgsCategorizedSymbolRenderer.sourceColorRamp>` and "
":meth:`sourceSymbol() <qgis.core.QgsCategorizedSymbolRenderer.sourceSymbol>`"
" methods."
msgstr ""
"Geralmente, o renderizador também armazena símbolo e rampa de cores "
"originais que foram usados ​​para a classificação: métodos "
":meth:`sourceColorRamp() "
"<qgis.core.QgsCategorizedSymbolRenderer.sourceColorRamp>` e "
":meth:`sourceSymbol() <qgis.core.QgsCategorizedSymbolRenderer.sourceSymbol "
">`."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1112
msgid "Graduated Symbol Renderer"
msgstr "Renderizador de Símbolo Graduado"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1114
msgid ""
"This renderer is very similar to the categorized symbol renderer described "
"above, but instead of one attribute value per class it works with ranges of "
"values and thus can be used only with numerical attributes."
msgstr ""
"Esse renderizador é muito semelhante ao renderizador de símbolo categorizado"
" descrito acima, mas, em vez de um valor de atributo por classe, ele "
"trabalha com intervalos de valores e, portanto, pode ser usado apenas com "
"atributos numéricos."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1118
msgid "To find out more about ranges used in the renderer"
msgstr "Para saber mais sobre os intervalos usados ​​no renderizador"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1141
msgid ""
"you can again use the :meth:`classAttribute "
"<qgis.core.QgsGraduatedSymbolRenderer.classAttribute>` (to find the "
"classification attribute name), :meth:`sourceSymbol "
"<qgis.core.QgsGraduatedSymbolRenderer.sourceSymbol>` and "
":meth:`sourceColorRamp "
"<qgis.core.QgsGraduatedSymbolRenderer.sourceColorRamp>` methods. "
"Additionally there is the :meth:`mode "
"<qgis.core.QgsGraduatedSymbolRenderer.mode>` method which determines how the"
" ranges were created: using equal intervals, quantiles or some other method."
msgstr ""
"você pode novamente usar os métodos :meth:`classAttribute "
"<qgis.core.QgsGraduatedSymbolRenderer.classAttribute>` (para encontrar o "
"nome do atributo de classificação), :meth:`sourceSymbol "
"<qgis.core.QgsGraduatedSymbolRenderer.sourceSymbol>` e "
":meth:`sourceColorRamp "
"<qgis.core.QgsGraduatedSymbolRenderer.sourceColorRamp>`. Além disso, existe "
"o método :meth:`mode <qgis.core.QgsGraduatedSymbolRenderer.mode>` que "
"determina como os intervalos foram criados: usando intervalos iguais, "
"quantis ou algum outro método."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1150
msgid ""
"If you wish to create your own graduated symbol renderer you can do so as "
"illustrated in the example snippet below (which creates a simple two class "
"arrangement)"
msgstr ""
"Se você deseja criar seu próprio renderizador de símbolo graduado, pode "
"fazê-lo como ilustrado no exemplo de trecho abaixo (que cria um arranjo "
"simples de duas classes)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1194
msgid "Working with Symbols"
msgstr "Trabalhando com Símbolos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1196
msgid ""
"For representation of symbols, there is :class:`QgsSymbol "
"<qgis.core.QgsSymbol>` base class with three derived classes:"
msgstr ""
"Para representação de símbolos, existe a classe base :class:`QgsSymbol "
"<qgis.core.QgsSymbol>` com três classes derivadas:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1199
msgid ""
":class:`QgsMarkerSymbol <qgis.core.QgsMarkerSymbol>` --- for point features"
msgstr ""
":class:`QgsMarkerSymbol <qgis.core.QgsMarkerSymbol>` --- para feições de "
"pontos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1200
msgid ":class:`QgsLineSymbol <qgis.core.QgsLineSymbol>` --- for line features"
msgstr ""
":class:`QgsLineSymbol <qgis.core.QgsLineSymbol>` --- para feições de linha"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1201
msgid ""
":class:`QgsFillSymbol <qgis.core.QgsFillSymbol>` --- for polygon features"
msgstr ""
":class:`QgsFillSymbol <qgis.core.QgsFillSymbol>` --- para feições de "
"polígono"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1203
msgid ""
"**Every symbol consists of one or more symbol layers** (classes derived from"
" :class:`QgsSymbolLayer <qgis.core.QgsSymbolLayer>`). The symbol layers do "
"the actual rendering, the symbol class itself serves only as a container for"
" the symbol layers."
msgstr ""
"**Todo símbolo consiste em uma ou mais camadas de símbolos** (classes "
"derivadas de :class:`QgsSymbolLayer <qgis.core.QgsSymbolLayer>`). As camadas"
" de símbolo fazem a renderização real, a própria classe de símbolo serve "
"apenas como um contêiner para as camadas de símbolo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1207
msgid ""
"Having an instance of a symbol (e.g. from a renderer), it is possible to "
"explore it: the :meth:`type <qgis.core.QgsSymbol.type>` method says whether "
"it is a marker, line or fill symbol. There is a :meth:`dump "
"<qgis.core.QgsSymbol.dump>` method which returns a brief description of the "
"symbol. To get a list of symbol layers:"
msgstr ""
"Tendo uma instância de um símbolo (por exemplo, de um renderizador), é "
"possível explorá-lo: o método :meth:`type <qgis.core.QgsSymbol.type>` diz se"
" é um marcador, linha ou símbolo com preenchimento. Existe um método "
":meth:`dump <qgis.core.QgsSymbol.dump>` que retorna uma breve descrição do "
"símbolo. Para obter uma lista de camadas de símbolos:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1224
msgid ""
"To find out symbol's color use :meth:`color <qgis.core.QgsSymbol.color>` "
"method and :meth:`setColor <qgis.core.QgsSymbol.setColor>` to change its "
"color. With marker symbols additionally you can query for the symbol size "
"and rotation with the :meth:`size <qgis.core.QgsMarkerSymbol.size>` and "
":meth:`angle <qgis.core.QgsMarkerSymbol.angle>` methods. For line symbols "
"the :meth:`width <qgis.core.QgsLineSymbol.width>` method returns the line "
"width."
msgstr ""
"Para descobrir a cor do símbolo, use o método :meth:`color "
"<qgis.core.QgsSymbol.color>` e :meth:`setColor "
"<qgis.core.QgsSymbol.setColor>` para alterar sua cor. Além disso, com os "
"símbolos dos marcadores, é possível consultar o tamanho e a rotação do "
"símbolo com os métodos :meth:`size <qgis.core.QgsMarkerSymbol.size>` e "
":meth:`angle <qgis.core.QgsMarkerSymbol.angle>`. Para símbolos de linha, o "
"método :meth:`width <qgis.core.QgsLineSymbol.width>` retorna a largura da "
"linha."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1229
msgid "Size and width are in millimeters by default, angles are in degrees."
msgstr "Por padrão, tamanho e largura são em milimetros e ângulos em graus."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1234
msgid "Working with Symbol Layers"
msgstr "Trabalhando com Camadas de Símbolos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1236
msgid ""
"As said before, symbol layers (subclasses of :class:`QgsSymbolLayer "
"<qgis.core.QgsSymbolLayer>`) determine the appearance of the features.  "
"There are several basic symbol layer classes for general use. It is possible"
" to implement new symbol layer types and thus arbitrarily customize how "
"features will be rendered. The :meth:`layerType() "
"<qgis.core.QgsSymbolLayer.layerType>` method uniquely identifies the symbol "
"layer class --- the basic and default ones are ``SimpleMarker``, "
"``SimpleLine`` and ``SimpleFill`` symbol layers types."
msgstr ""
"Como dito anteriormente, as camadas de símbolos (subclasses de "
":class:`QgsSymbolLayer <qgis.core.QgsSymbolLayer>`) determinam a aparência "
"das feições. Existem várias classes básicas de camadas de símbolos para uso "
"geral. É possível implementar novos tipos de camadas de símbolos e, assim, "
"personalizar arbitrariamente como as feiçõe serão renderizadas. O método "
":meth:`layerType() <qgis.core.QgsSymbolLayer.layerType>` identifica "
"exclusivamente a classe da camada de símbolo --- os básicos e o padrão são "
"``SimpleMarker``, ``SimpleLine`` e ``SimpleFill`` tipos de camadas de "
"símbolos."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1243
msgid ""
"You can get a complete list of the types of symbol layers you can create for"
" a given symbol layer class with the following code:"
msgstr ""
"Você pode obter uma lista completa dos tipos de camadas de símbolos que pode"
" criar para uma determinada classe de camadas de símbolos com o seguinte "
"código:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1265
msgid ""
"The :class:`QgsSymbolLayerRegistry <qgis.core.QgsSymbolLayerRegistry>` class"
" manages a database of all available symbol layer types."
msgstr ""
"A classe :class:`QgsSymbolLayerRegistry <qgis.core.QgsSymbolLayerRegistry>` "
"gerencia um banco de dados de todos os tipos de camada de símbolo "
"disponíveis."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1268
msgid ""
"To access symbol layer data, use its :meth:`properties() "
"<qgis.core.QgsSymbolLayer.properties>` method that returns a key-value "
"dictionary of properties which determine the appearance. Each symbol layer "
"type has a specific set of properties that it uses. Additionally, there are "
"the generic methods :meth:`color <qgis.core.QgsSymbol.color>`, :meth:`size "
"<qgis.core.QgsMarkerSymbol.size>`, :meth:`angle "
"<qgis.core.QgsMarkerSymbol.angle>` and :meth:`width "
"<qgis.core.QgsLineSymbol.width>`, with their setter counterparts. Of course "
"size and angle are available only for marker symbol layers and width for "
"line symbol layers."
msgstr ""
"Para acessar os dados da camada de símbolo, use o método :meth:`properties()"
" <qgis.core.QgsSymbolLayer.properties>` que retorna um dicionário de "
"valores-chave de propriedades que determinam a aparência. Cada tipo de "
"camada de símbolo possui um conjunto específico de propriedades que ele usa."
" Além disso, existem os métodos genéricos :meth:`color "
"<qgis.core.QgsSymbol.color>`, :meth:`size <qgis.core.QgsMarkerSymbol.size>`,"
" :meth:`angle <qgis.core.QgsMarkerSymbol .angle>` e :meth:`width "
"<qgis.core.QgsLineSymbol.width>`, com suas definições correspondentes. É "
"claro que o tamanho e o ângulo estão disponíveis apenas para as camadas de "
"símbolos dos marcadores e a largura para as camadas de símbolos de linha."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1280
msgid "Creating Custom Symbol Layer Types"
msgstr "Criando Tipos de Camadas de Símbolos Personalizadas"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1282
msgid ""
"Imagine you would like to customize the way how the data gets rendered. You "
"can create your own symbol layer class that will draw the features exactly "
"as you wish. Here is an example of a marker that draws red circles with "
"specified radius"
msgstr ""
"Imagine que você gostaria de personalizar a maneira como os dados são "
"renderizados. Você pode criar sua própria classe de camada de símbolo que "
"desenhará as feições exatamente como você deseja. Aqui está um exemplo de um"
" marcador que desenha círculos vermelhos com raio especificado"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1322
msgid ""
"The :meth:`layerType <qgis.core.QgsSymbolLayer.layerType>` method determines"
" the name of the symbol layer; it has to be unique among all symbol layers. "
"The :meth:`properties <qgis.core.QgsSymbolLayer.properties>` method is used "
"for persistence of attributes. The :meth:`clone "
"<qgis.core.QgsSymbolLayer.clone>` method must return a copy of the symbol "
"layer with all attributes being exactly the same. Finally there are "
"rendering methods: :meth:`startRender "
"<qgis.core.QgsSymbolLayer.startRender>` is called before rendering the first"
" feature, :meth:`stopRender <qgis.core.QgsSymbolLayer.stopRender>` when the "
"rendering is done, and :meth:`renderPoint "
"<qgis.core.QgsMarkerSymbolLayer.renderPoint>` is called to do the rendering."
" The coordinates of the point(s) are already transformed to the output "
"coordinates."
msgstr ""
"O método :meth:`layerType <qgis.core.QgsSymbolLayer.layerType>` determina o "
"nome da camada de símbolo; deve ser único entre todas as camadas de "
"símbolos. O método :meth:`properties <qgis.core.QgsSymbolLayer.properties>` "
"é usado para persistência de atributos. O método :meth:`clone "
"<qgis.core.QgsSymbolLayer.clone>` deve retornar uma cópia da camada de "
"símbolo com todos os atributos exatamente iguais. Finalmente, existem "
"métodos de renderização: :meth:`startRender "
"<qgis.core.QgsSymbolLayer.startRender>` é chamado antes de renderizar o "
"primeiro recurso, :meth:`stopRender <qgis.core.QgsSymbolLayer.stopRender>` "
"quando a renderização é concluída, e :meth:`renderPoint "
"<qgis.core.QgsMarkerSymbolLayer.renderPoint>` é chamado para fazer a "
"renderização. As coordenadas do(s) ponto(s) já estão transformadas nas "
"coordenadas de saída."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1334
msgid ""
"For polylines and polygons the only difference would be in the rendering "
"method: you would use :meth:`renderPolyline "
"<qgis.core.QgsLineSymbolLayer.renderPolyline>` which receives a list of "
"lines, while :meth:`renderPolygon "
"<qgis.core.QgsFillSymbolLayer.renderPolygon>` receives a list of points on "
"the outer ring as the first parameter and a list of inner rings (or None) as"
" a second parameter."
msgstr ""
"Para polilinhas e polígonos, a única diferença seria no método de "
"renderização: você usaria :meth:`renderPolyline "
"<qgis.core.QgsLineSymbolLayer.renderPolyline>` que recebe uma lista de "
"linhas, enquanto :meth:`renderPolygon <qgis.core. "
"QgsFillSymbolLayer.renderPolygon> `recebe uma lista de pontos no anel "
"externo como primeiro parâmetro e uma lista de anéis internos (ou None) como"
" segundo parâmetro."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1342
msgid ""
"Usually it is convenient to add a GUI for setting attributes of the symbol "
"layer type to allow users to customize the appearance: in case of our "
"example above we can let user set circle radius. The following code "
"implements such widget"
msgstr ""
"Geralmente, é conveniente adicionar uma GUI para definir atributos do tipo "
"de camada de símbolo para permitir que os usuários personalizem a aparência:"
" no caso do nosso exemplo acima, podemos permitir que o usuário defina o "
"raio do círculo. O código a seguir implementa esse widget"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1380
msgid ""
"This widget can be embedded into the symbol properties dialog. When the "
"symbol layer type is selected in symbol properties dialog, it creates an "
"instance of the symbol layer and an instance of the symbol layer widget. "
"Then it calls the :meth:`setSymbolLayer "
"<qgis.gui.QgsSymbolLayerWidget.setSymbolLayer>` method to assign the symbol "
"layer to the widget. In that method the widget should update the UI to "
"reflect the attributes of the symbol layer. The :meth:`symbolLayer "
"<qgis.gui.QgsSymbolLayerWidget.symbolLayer>` method is used to retrieve the "
"symbol layer again by the properties dialog to use it for the symbol."
msgstr ""
"Este widget pode ser incorporado na caixa de diálogo de propriedades do "
"símbolo. Quando o tipo de camada de símbolo é selecionado na caixa de "
"diálogo de propriedades do símbolo, ele cria uma instância da camada de "
"símbolos e uma instância do widget da camada de símbolos. Em seguida, chama "
"o método :meth:`setSymbolLayer "
"<qgis.gui.QgsSymbolLayerWidget.setSymbolLayer>` para atribuir a camada de "
"símbolo ao widget. Nesse método, o widget deve atualizar a interface do "
"usuário para refletir os atributos da camada de símbolo. O método "
":meth:`symbolLayer <qgis.gui.QgsSymbolLayerWidget.symbolLayer>` é usado para"
" recuperar a camada de símbolo novamente pela caixa de diálogo de "
"propriedades para usá-la para o símbolo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1390
msgid ""
"On every change of attributes, the widget should emit the :any:`changed() "
"<qgis.gui.QgsSymbolLayerWidget.changed>` signal to let the properties dialog"
" update the symbol preview."
msgstr ""
"Em cada alteração de atributos, o widget deve emitir o sinal :any:`changed()"
" <qgis.gui.QgsSymbolLayerWidget.changed>` para permitir que o diálogo de "
"propriedades atualize a visualização do símbolo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1394
msgid ""
"Now we are missing only the final glue: to make QGIS aware of these new "
"classes. This is done by adding the symbol layer to registry. It is possible"
" to use the symbol layer also without adding it to the registry, but some "
"functionality will not work: e.g. loading of project files with the custom "
"symbol layers or inability to edit the layer's attributes in GUI."
msgstr ""
"Agora falta apenas a cola final: fazer o QGIS entender essas novas classes. "
"Isso é feito adicionando a camada de símbolo ao registro. É possível usar a "
"camada de símbolo também sem adicioná-la ao registro, mas algumas "
"funcionalidades não funcionarão: por exemplo carregamento de arquivos de "
"projeto com as camadas de símbolos personalizados ou incapacidade de editar "
"os atributos da camada na GUI."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1400
msgid "We will have to create metadata for the symbol layer"
msgstr "Você terá que criar metadados para a camada de símbolos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1417
msgid ""
"You should pass layer type (the same as returned by the layer) and symbol "
"type (marker/line/fill) to the constructor of the parent class. The "
":meth:`createSymbolLayer() "
"<qgis.core.QgsSymbolLayerAbstractMetadata.createSymbolLayer>` method takes "
"care of creating an instance of symbol layer with attributes specified in "
"the `props` dictionary. And there is the :meth:`createSymbolLayerWidget() "
"<qgis.core.QgsSymbolLayerAbstractMetadata.createSymbolLayerWidget>` method "
"which returns the settings widget for this symbol layer type."
msgstr ""
"Você deve passar o tipo de camada (igual ao retornado pela camada) e o tipo "
"de símbolo (marcador/linha/preenchimento) para o construtor da classe pai. O"
" método :meth:`createSymbolLayer() "
"<qgis.core.QgsSymbolLayerAbstractMetadata.createSymbolLayer>` cuida da "
"criação de uma instância da camada de símbolos com atributos especificados "
"no dicionário `props`. E existe o método :meth:`createSymbolLayerWidget() "
"<qgis.core.QgsSymbolLayerAbstractMetadata.createSymbolLayerWidget>` que "
"retorna o widget de configurações para esse tipo de camada de símbolo."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1425
msgid ""
"The last step is to add this symbol layer to the registry --- and we are "
"done."
msgstr ""
"O último passo para adicionar este símbolo de camada para o registro --- e "
"estamos prontos."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1431
msgid "Creating Custom Renderers"
msgstr "Criando Renderizadores Personalizados"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1433
msgid ""
"It might be useful to create a new renderer implementation if you would like"
" to customize the rules how to select symbols for rendering of features. "
"Some use cases where you would want to do it: symbol is determined from a "
"combination of fields, size of symbols changes depending on current scale "
"etc."
msgstr ""
"Pode ser útil criar uma nova implementação de renderizador se você desejar "
"personalizar as regras de como selecionar símbolos para renderização de "
"recursos. Alguns casos de uso em que você deseja fazer isso: o símbolo é "
"determinado a partir de uma combinação de campos, o tamanho dos símbolos "
"muda dependendo da escala atual etc."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1438
msgid ""
"The following code shows a simple custom renderer that creates two marker "
"symbols and chooses randomly one of them for every feature"
msgstr ""
"O código a seguir mostra um renderizador personalizado simples que cria dois"
" símbolos de marcador e escolhe aleatoriamente um deles para cada feição"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1474
msgid ""
"The constructor of the parent :class:`QgsFeatureRenderer "
"<qgis.core.QgsFeatureRenderer>` class needs a renderer name (which has to be"
" unique among renderers). The :meth:`symbolForFeature "
"<qgis.core.QgsFeatureRenderer.symbolForFeature>` method is the one that "
"decides what symbol will be used for a particular feature. "
":meth:`startRender <qgis.core.QgsFeatureRenderer.startRender>` and "
":meth:`stopRender <qgis.core.QgsFeatureRenderer.stopRender>` take care of "
"initialization/finalization of symbol rendering. The :meth:`usedAttributes "
"<qgis.core.QgsFeatureRenderer.usedAttributes>` method can return a list of "
"field names that the renderer expects to be present. Finally, the "
":meth:`clone <qgis.core.QgsFeatureRenderer.clone>` method should return a "
"copy of the renderer."
msgstr ""
"O construtor da classe pai :class:`QgsFeatureRenderer "
"<qgis.core.QgsFeatureRenderer>` precisa de um nome de renderizador (que deve"
" ser exclusivo entre os renderizadores). O método :meth:`symbolForFeature "
"<qgis.core.QgsFeatureRenderer.symbolForFeature>` é o método que decide qual "
"símbolo será usado para um recurso específico. :meth:`startRender "
"<qgis.core.QgsFeatureRenderer.startRender>` e :meth:`stopRender "
"<qgis.core.QgsFeatureRenderer.stopRender>` cuida da "
"inicialização/finalização da renderização de símbolo. O método "
":meth:`usedAttributes <qgis.core.QgsFeatureRenderer.usedAttributes>` pode "
"retornar uma lista de nomes de campos que o representante espera estar "
"presente. Finalmente, o método :meth:`clone "
"<qgis.core.QgsFeatureRenderer.clone>` deve retornar uma cópia do "
"renderizador."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1485
msgid ""
"Like with symbol layers, it is possible to attach a GUI for configuration of"
" the renderer. It has to be derived from :class:`QgsRendererWidget "
"<qgis.gui.QgsRendererWidget>`. The following sample code creates a button "
"that allows the user to set the first symbol"
msgstr ""
"Como nas camadas de símbolos, é possível anexar uma GUI para a configuração "
"do renderizador. Ele deve ser derivado de :class:`QgsRendererWidget "
"<qgis.gui.QgsRendererWidget>`. O código de amostra a seguir cria um botão "
"que permite ao usuário definir o primeiro símbolo"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1519
msgid ""
"The constructor receives instances of the active layer "
"(:class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`), the global style "
"(:class:`QgsStyle <qgis.core.QgsStyle>`) and the current renderer. If there "
"is no renderer or the renderer has different type, it will be replaced with "
"our new renderer, otherwise we will use the current renderer (which has "
"already the type we need). The widget contents should be updated to show "
"current state of the renderer. When the renderer dialog is accepted, the "
"widget's :meth:`renderer <qgis.gui.QgsRendererWidget.renderer>` method is "
"called to get the current renderer --- it will be assigned to the layer."
msgstr ""
"O construtor recebe instâncias da camada ativa (:class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>`), do estilo global (:class:`QgsStyle "
"<qgis.core.QgsStyle>`) e do renderizador atual. Se não houver renderizador "
"ou o renderizador tiver um tipo diferente, ele será substituído pelo nosso "
"novo renderizador; caso contrário, usaremos o renderizador atual (que já "
"possui o tipo que precisamos). O conteúdo do widget deve ser atualizado para"
" mostrar o estado atual do renderizador. Quando a caixa de diálogo do "
"renderizador é aceita, o método do widget :meth:`renderer "
"<qgis.gui.QgsRendererWidget.renderer>` é chamado para obter o renderizador "
"atual - ele será atribuído à camada."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1529
msgid ""
"The last missing bit is the renderer metadata and registration in registry, "
"otherwise loading of layers with the renderer will not work and user will "
"not be able to select it from the list of renderers. Let us finish our "
"RandomRenderer example"
msgstr ""
"A última parte ausente são os metadados e a inclusão do renderizador no "
"registro, caso contrário, o carregamento de camadas com o renderizador não "
"funcionará e o usuário não poderá selecioná-lo na lista de renderizadores. "
"Vamos terminar o nosso exemplo RandomRenderer"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1555
msgid ""
"Similarly as with symbol layers, abstract metadata constructor awaits "
"renderer name, name visible for users and optionally name of renderer's "
"icon. The :meth:`createRenderer "
"<qgis.core.QgsRendererAbstractMetadata.createRenderer>` method passes a "
":class:`QDomElement` instance that can be used to restore the renderer's "
"state from the DOM tree. The :meth:`createRendererWidget "
"<qgis.core.QgsRendererAbstractMetadata.createRendererWidget>` method creates"
" the configuration widget. It does not have to be present or can return "
"``None`` if the renderer does not come with GUI."
msgstr ""
"Da mesma forma que nas camadas de símbolos, o construtor de metadados "
"abstratos aguarda o nome do renderizador, nome visível para os usuários e, "
"opcionalmente, o nome do ícone do renderizador. O método "
":meth:`createRenderer "
"<qgis.core.QgsRendererAbstractMetadata.createRenderer>` passa uma instância "
"de :class:`QDomElement` que pode ser usada para restaurar o estado do "
"renderizador da árvore DOM. O método :meth:`createRendererWidget "
"<qgis.core.QgsRendererAbstractMetadata.createRendererWidget>` cria o widget "
"de configuração. Ele não precisa estar presente ou pode retornar ``None`` se"
" o renderizador não vier com a GUI."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1564
msgid ""
"To associate an icon with the renderer you can assign it in the "
":class:`QgsRendererAbstractMetadata <qgis.core.QgsRendererAbstractMetadata>`"
" constructor as a third (optional) argument --- the base class constructor "
"in the RandomRendererMetadata :func:`__init__` function becomes"
msgstr ""
"Para associar um ícone ao renderizador, você pode atribuí-lo no construtor "
":class:`QgsRendererAbstractMetadata <qgis.core.QgsRendererAbstractMetadata>`"
" como um terceiro argumento (opcional) --- o construtor da classe base na "
"função RandomRendererMetadata :func:`__init__`` se torna"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1578
msgid ""
"The icon can also be associated at any later time using the :meth:`setIcon "
"<qgis.core.QgsRendererAbstractMetadata.setIcon>` method of the metadata "
"class. The icon can be loaded from a file (as shown above) or can be loaded "
"from a `Qt resource <https://doc.qt.io/qt-5/resources.html>`_ (PyQt5 "
"includes .qrc compiler for Python)."
msgstr ""
"O ícone também pode ser associado posteriormente, usando o método "
":meth:`setIcon <qgis.core.QgsRendererAbstractMetadata.setIcon>` da classe de"
" metadados. O ícone pode ser carregado de um arquivo (como mostrado acima) "
"ou de um recurso `Qt <https://doc.qt.io/qt-5/resources.html>`_ (PyQt5 inclui"
" o compilador .qrc para Python)."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1586
msgid "Further Topics"
msgstr "Outros Tópicos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1589
msgid "**TODO:**"
msgstr "**TODO:**"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1591
msgid "creating/modifying symbols"
msgstr "criando/modificando símbolos"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1592
msgid "working with style (:class:`QgsStyle <qgis.core.QgsStyle>`)"
msgstr "trabalhando com estilo (:class:`QgsStyle <qgis.core.QgsStyle>`)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1593
msgid ""
"working with color ramps (:class:`QgsColorRamp <qgis.core.QgsColorRamp>`)"
msgstr ""
"trabalhando com rampa de cores (:class:`QgsColorRamp "
"<qgis.core.QgsColorRamp>`)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1594
msgid "exploring symbol layer and renderer registries"
msgstr "explorando a camada de símbolos e os registros do renderizador"
