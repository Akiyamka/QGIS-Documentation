# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# Aline Furlanetto Viero <afviero@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 01:57+0200\n"
"PO-Revision-Date: 2020-03-16 19:24+0000\n"
"Last-Translator: Aline Furlanetto Viero <afviero@gmail.com>, 2020\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/qgis/teams/6144/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../docs/developers_guide/unittesting.rst:6
msgid "Unit Testing"
msgstr "Teste de unidade"

#: ../../docs/developers_guide/unittesting.rst:11
msgid ""
"As of November 2007 we require all new features going into master to be "
"accompanied with a unit test. Initially we have limited this requirement to "
"qgis_core, and we will extend this requirement to other parts of the code "
"base once people are familiar with the procedures for unit testing explained"
" in the sections that follow."
msgstr ""
"Em novembro de 2007, passamos a exigir que todos os novos recursos que vão "
"para a versão master passem a ser acompanhado de um teste de unidade. "
"Inicialmente nós limitamos este requisito ao qgis_core, e vamos estender "
"este requisito a outras partes da base de código conforme as pessoas estão "
"familiarizados com os procedimentos de teste de unidade explicado nas seções"
" que se seguem."

#: ../../docs/developers_guide/unittesting.rst:19
msgid "The QGIS testing framework - an overview"
msgstr "O framework de testes do QGIS - uma visão geral"

#: ../../docs/developers_guide/unittesting.rst:21
msgid ""
"Unit testing is carried out using a combination of QTestLib (the Qt testing "
"library) and CTest (a framework for compiling and running tests as part of "
"the CMake build process). Lets take an overview of the process before we "
"delve into the details:"
msgstr ""
"O teste de unidade é realizado usando uma combinação de QTestLib (a "
"biblioteca de testes Qt) e CTest (uma estrutura para compilar e executar "
"testes como parte do processo de criação do CMake). Vamos ter uma visão "
"geral do processo antes de nos aprofundarmos nos detalhes:"

#: ../../docs/developers_guide/unittesting.rst:26
msgid ""
"There is some code you want to test, e.g. a class or function. Extreme "
"programming advocates suggest that the code should not even be written yet "
"when you start building your tests, and then as you implement your code you "
"can immediately validate each new functional part you add with your test. In"
" practice you will probably need to write tests for pre-existing code in "
"QGIS since we are starting with a testing framework well after much "
"application logic has already been implemented."
msgstr ""
"Há algum código que você deseja testar, por exemplo uma classe ou função. Os"
" maiores defensores da programaçãosugerem que o código ainda não deve ser "
"gravado quando você começar a compilar seus testes e, ao implementar o "
"código, poderá validar imediatamente cada nova parte funcional que você "
"adiciona ao seu teste. Na prática, você provavelmente precisará escrever "
"testes para o código preexistente no QGIS, pois estamos começando com uma "
"estrutura de teste bem depois da implementação de muita lógica do "
"aplicativo."

#: ../../docs/developers_guide/unittesting.rst:34
msgid ""
"You create a unit test. This happens under ``<QGIS Source "
"Dir>/tests/src/core`` in the case of the core lib. The test is basically a "
"client that creates an instance of a class and calls some methods on that "
"class. It will check the return from each method to make sure it matches the"
" expected value. If any one of the calls fails, the unit will fail."
msgstr ""
"Você cria um teste de unidade. Isso acontece em ``<QGIS Source "
"Dir>/tests/src/core`` no caso da biblioteca principal. O teste é basicamente"
" um cliente que cria uma instância de uma classe e chama alguns métodos "
"nessa classe. Ele verifica o retorno de cada método para garantir que ele "
"corresponda ao valor esperado. Se qualquer uma das chamadas falhar, a "
"unidade vai falhar."

#: ../../docs/developers_guide/unittesting.rst:40
msgid ""
"You include QtTestLib macros in your test class. This macro is processed by "
"the Qt meta object compiler (moc) and expands your test class into a "
"runnable application."
msgstr ""
"Você inclui macros QtTestLib na sua classe de teste. Essa macro é processada"
" pelo meta-objeto Qt (moc) e expande sua classe de teste para um aplicativo "
"executável."

#: ../../docs/developers_guide/unittesting.rst:44
msgid ""
"You add a section to the CMakeLists.txt in your tests directory that will "
"build your test."
msgstr ""
"Você adiciona uma seção ao CMakeLists.txt no diretório de testes que criará "
"seu teste."

#: ../../docs/developers_guide/unittesting.rst:47
msgid ""
"You ensure you have ``ENABLE_TESTING`` enabled in ccmake / cmakesetup. This "
"will ensure your tests actually get compiled when you type make."
msgstr ""
"Você garante que ``ENABLE_TESTING`` está ativado no ccmake / cmakesetup. "
"Isso garantirá que seus testes sejam realmente compilados quando você "
"digitar make."

#: ../../docs/developers_guide/unittesting.rst:50
msgid ""
"You optionally add test data to ``<QGIS Source Dir>/tests/testdata`` if your"
" test is data driven (e.g. needs to load a shapefile). These test data "
"should be as small as possible and wherever possible you should use the "
"existing datasets already there. Your tests should never modify this data in"
" situ, but rather make a temporary copy somewhere if needed."
msgstr ""
"Você opcionalmente adiciona dados de teste ao ``<QGIS Source "
"Dir>/tests/testdata`` se seu teste for orientado por dados (por exemplo, é "
"necessário carregar um shapefile). Esses dados de teste devem ser tão "
"pequenos quanto possível e, sempre que possível, você deve usar os conjuntos"
" de dados já existentes. Seus testes nunca devem modificar esses dados in "
"situ, mas fazer uma cópia temporária em algum lugar, se necessário."

#: ../../docs/developers_guide/unittesting.rst:56
msgid ""
"You compile your sources and install. Do this using normal ``make && (sudo)"
"  make install`` procedure."
msgstr ""
"Você compila suas sources e instala. Faça isso usando o procedimento normal "
"``make && (sudo) make install``."

#: ../../docs/developers_guide/unittesting.rst:59
msgid ""
"You run your tests. This is normally done simply by doing ``make test`` "
"after the ``make install`` step, though we will explain other approaches "
"that offer more fine grained control over running tests."
msgstr ""
"Você executa seus testes. Isso normalmente é feito simplesmente executando "
"``make test`` após a etapa ``make install``, apesar de explicarmos outras "
"abordagens que oferecem controle mais refinado sobre a execução de testes."

#: ../../docs/developers_guide/unittesting.rst:64
msgid ""
"Right with that overview in mind, we will delve into a bit of detail. We've "
"already done much of the configuration for you in CMake and other places in "
"the source tree so all you need to do are the easy bits - writing unit "
"tests!"
msgstr ""
"Bem com essa visão geral, vamos nos aprofundar um pouco nos detalhes. Já "
"fizemos grande parte da configuração para você no CMake e em outros locais "
"da árvore de origem; portanto, tudo o que você precisa fazer são as partes "
"fáceis - escrever testes de unidade!"

#: ../../docs/developers_guide/unittesting.rst:70
msgid "Creating a unit test"
msgstr "Criar um teste de unidade"

#: ../../docs/developers_guide/unittesting.rst:72
msgid ""
"Creating a unit test is easy - typically you will do this by just creating a"
" single :file:`.cpp` file (no :file:`.h` file is used) and implement all "
"your test methods as public methods that return void. We'll use a simple "
"test class for ``QgsRasterLayer`` throughout the section that follows to "
"illustrate. By convention we will name our test with the same name as the "
"class they are testing but prefixed with 'Test'. So our test implementation "
"goes in a file called :file:`testqgsrasterlayer.cpp` and the class itself "
"will be ``TestQgsRasterLayer``. First we add our standard copyright banner:"
msgstr ""
"Criar um teste de unidade é fácil - normalmente você faz isso apenas criando"
" um único arquivo :file:`.cpp` (o arquivo no :file:`.h` é usado) e "
"implementa todos os seus métodos de teste como métodos públicos que retornam"
" nulos. Usaremos uma classe de teste simples para ``QgsRasterLayer`` em toda"
" a seção a seguir para ilustrar. Por convenção, nomearemos nosso teste com o"
" mesmo nome da classe que eles estão testando, mas prefixados com 'Test'. "
"Portanto, nossa implementação de teste entra em um arquivo chamado "
":file:`testqgsrasterlayer.cpp` e a própria classe será "
"``TestQgsRasterLayer``. Primeiro, adicionamos nosso banner de direitos "
"autorais padrão:"

#: ../../docs/developers_guide/unittesting.rst:585
msgid "Building your unit test"
msgstr "Construindo sua unidade teste"

#: ../../docs/developers_guide/unittesting.rst:598
msgid "Run your tests"
msgstr "Execute seus testes"

#: ../../docs/developers_guide/unittesting.rst:601
msgid ""
"The simplest way to run the tests is as part of your normal build process:"
msgstr ""
"A maneira mais simples de executar os testes é como parte do seu processo de"
" criação normal:"
