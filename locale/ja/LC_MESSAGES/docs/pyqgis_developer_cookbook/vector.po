# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2002-now, QGIS project
# This file is distributed under the same license as the QGIS Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Richard Duivenvoorde <richard@duif.net>, 2020
# mnamihdk, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Documentation 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-27 06:22+0100\n"
"PO-Revision-Date: 2020-03-16 19:23+0000\n"
"Last-Translator: mnamihdk, 2020\n"
"Language-Team: Japanese (https://www.transifex.com/qgis/teams/6144/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:53
msgid "Using Vector Layers"
msgstr "ベクターレイヤーを使う"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:58
msgid ""
"This section summarizes various actions that can be done with vector layers."
msgstr "このセクションではベクターレイヤーに対して行える様々な操作について紹介していきます."

#: ../../docs/pyqgis_developer_cookbook/vector.rst:66
msgid "Retrieving information about attributes"
msgstr "属性に関する情報を取得する"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:112
msgid "Iterating over Vector Layer"
msgstr "ベクターレイヤーの反復処理"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:173
msgid "Selecting features"
msgstr "地物の選択"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:230
msgid "Accessing attributes"
msgstr "属性にアクセスする"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:256
msgid "Iterating over selected features"
msgstr "選択された地物への反復処理"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:270
msgid "Iterating over a subset of features"
msgstr "一部の地物への反復処理"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:324
msgid ""
"The request can be used to define the data retrieved for each feature, so "
"the iterator returns all features, but returns partial data for each of "
"them."
msgstr ""
"要求は、地物ごとに取得したデータを定義するために使用できるので、反復子はすべての地物を返しますが、それぞれの地物については部分的データを返します。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:349
msgid "Modifying Vector Layers"
msgstr "ベクターレイヤーを修正する"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:351
msgid ""
"Most vector data providers support editing of layer data. Sometimes they "
"support just a subset of possible editing actions. Use the "
":meth:`capabilities() <qgis.core.QgsVectorDataProvider.capabilities>` "
"function to find out what set of functionality is supported."
msgstr ""
"大部分のベクターデータプロバイダーは、レイヤーの編集をサポートしています。プロバイダーによっては、可能な編集操作の一部だけしかサポートしていないこともあります。どんな機能をサポートしているかを知るには、"
" :meth:`capabilities() <qgis.core.QgsVectorDataProvider.capabilities>` "
"関数を使ってください。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:367
msgid ""
"For a list of all available capabilities, please refer to the :class:`API "
"Documentation of QgsVectorDataProvider <qgis.core.QgsVectorDataProvider>`."
msgstr ""
"可能な性能をすべて知るには、 :class:`API Documentation of QgsVectorDataProvider "
"<qgis.core.QgsVectorDataProvider>` を参照してください。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:371
msgid ""
"To print layer's capabilities textual description in a comma separated list "
"you can use :meth:`capabilitiesString() "
"<qgis.core.QgsVectorDataProvider.capabilitiesString>` as in the following "
"example:"
msgstr ""
":meth:`capabilitiesString() "
"<qgis.core.QgsVectorDataProvider.capabilitiesString>` "
"を使うと、下記の例に見るように、レイヤーの性能の説明文をコンマで区切られたリストの形で表示することができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:384
msgid ""
"By using any of the following methods for vector layer editing, the changes "
"are directly committed to the underlying data store (a file, database etc). "
"In case you would like to do only temporary changes, skip to the next "
"section that explains how to do :ref:`modifications with editing buffer "
"<editing-buffer>`."
msgstr ""
"ベクターレイヤーを編集する以下の方法はいずれも、変更が直接、レイヤーの裏にあるデータストア（ファイルやデータベースなど）にコミットされます。一時的な変更をしたいだけの場合にどうすればよいかの説明は、次のセクション"
" :ref:`ベクターレイヤーを編集バッファで修正する <editing-buffer>` でしているので、以下を飛ばしてそちらに進んでください。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:392
msgid ""
"If you are working inside QGIS (either from the console or from a plugin), "
"it might be necessary to force a redraw of the map canvas in order to see "
"the changes you've done to the geometry, to the style or to the attributes:"
msgstr ""
"QGISの内部（コンソールまたはプラグインのいずれか）で作業している場合、ジオメトリ、スタイル、属性に加えられた変更を確認するために、以下のように地図キャンバスの強制的な再描画が必要になることもあります。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:407
msgid "Add Features"
msgstr "地物の追加"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:432
msgid "Delete Features"
msgstr "地物の削除"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:442
msgid "Modify Features"
msgstr "地物の修正"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:470
msgid "Modifying Vector Layers with an Editing Buffer"
msgstr "ベクターレイヤーを編集バッファで修正する"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:483
msgid ""
"The methods are similar to the ones we have seen in the provider, but they "
"are called on the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` object "
"instead."
msgstr ""
"メソッドはすでに見たプロバイダーにおけるものとよく似ていますが、プロバイダーではなく :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>` オブジェクトで呼び出されます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:487
msgid ""
"For these methods to work, the layer must be in editing mode. To start the "
"editing mode, use the :meth:`startEditing() "
"<qgis.core.QgsVectorLayer.startEditing>` method. To stop editing, use the "
":meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` or "
":meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` methods. The first "
"one will commit all your changes to the data source, while the second one "
"will discard them and will not modify the data source at all."
msgstr ""
"これらのメソッドが機能するためには、そのレイヤーは編集モードでなければいけません。編集モードを開始するには、 :meth:`startEditing()"
" <qgis.core.QgsVectorLayer.startEditing>` メソッドを使用します。編集を終了するには、 "
":meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` メソッドか、もしくは "
":meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` "
"メソッドを使用します。前者はすべての変更をデータソースにコミットします。一方後者は変更をすべて破棄し、データソースには一切、手をつけません。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:494
msgid ""
"To find out whether a layer is in editing mode, use the :meth:`isEditable() "
"<qgis.core.QgsVectorLayer.isEditable>` method."
msgstr ""
"あるレイヤーが編集モードかどうかを知るには、 :meth:`isEditable() "
"<qgis.core.QgsVectorLayer.isEditable>` メソッドを使用してください。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:497
msgid ""
"Here you have some examples that demonstrate how to use these editing "
"methods."
msgstr "では、これら編集メソッドの使用方法を示す実例をいくつか見てもらいます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:525
msgid ""
"In order to make undo/redo work properly, the above mentioned calls have to "
"be wrapped into undo commands. (If you do not care about undo/redo and want "
"to have the changes stored immediately, then you will have easier work by "
":ref:`editing with data provider <editing>`.)"
msgstr ""
"取り消し／やり直しを適切に機能させるためには、上記のメソッド呼び出しを undo "
"コマンドでラップしなければなりません。取り消し／やり直し機能が不要で、変更を即座に保存したい場合は、 :ref:`データプロバイダを使って編集 "
"<editing>` したほうが手軽でしょう。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:530
msgid "Here is how you can use the undo functionality:"
msgstr "取り消し機能を使用するには次のように行います。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:547
msgid ""
"The :meth:`beginEditCommand() <qgis.core.QgsVectorLayer.beginEditCommand>` "
"method will create an internal \"active\" command and will record subsequent"
" changes in vector layer. With the call to :meth:`endEditCommand() "
"<qgis.core.QgsVectorLayer.endEditCommand>` the command is pushed onto the "
"undo stack and the user will be able to undo/redo it from GUI. In case "
"something went wrong while doing the changes, the "
":meth:`destroyEditCommand() <qgis.core.QgsVectorLayer.destroyEditCommand>` "
"method will remove the command and rollback all changes done while this "
"command was active."
msgstr ""
":meth:`beginEditCommand() <qgis.core.QgsVectorLayer.beginEditCommand>` "
"メソッドは内部的に「アクティブな」コマンドを生成し、ベクターレイヤーでその後に起こる変化を記録し続けます。 "
":meth:`endEditCommand() <qgis.core.QgsVectorLayer.endEditCommand>` "
"メソッドの呼び出しによって、コマンドはアンドゥスタックにプッシュされ、ユーザーがGUIから取り消し／やり直しをすることができるようになります。変更の最中に何か不具合が生じたときは、"
" :meth:`destroyEditCommand() <qgis.core.QgsVectorLayer.destroyEditCommand>` "
"メソッドによってコマンドは削除され、コマンドがアクティブな間に行われたすべての変更はロールバックされます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:554
msgid ""
"You can also use the :code:`with edit(layer)`-statement to wrap commit and "
"rollback into a more semantic code block as shown in the example below:"
msgstr ""
"次の例に示すように、よりセマンティックなコードブロックにコミットとロールバックをラップする :code:`with edit(layer)` "
"文も使用できます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:565
msgid ""
"This will automatically call :meth:`commitChanges() "
"<qgis.core.QgsVectorLayer.commitChanges>` in the end. If any exception "
"occurs, it will :meth:`rollBack() <qgis.core.QgsVectorLayer.rollBack>` all "
"the changes. In case a problem is encountered within :meth:`commitChanges() "
"<qgis.core.QgsVectorLayer.commitChanges>` (when the method returns False) a "
":class:`QgsEditError <qgis.core.QgsEditError>` exception will be raised."
msgstr ""
"これは最後に :meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` "
"メソッドを自動的に呼び出します。もし何らかの例外が発生したときは、 :meth:`rollBack() "
"<qgis.core.QgsVectorLayer.rollBack>` メソッドを呼び出してすべての変更をロールバックします。 "
":meth:`commitChanges() <qgis.core.QgsVectorLayer.commitChanges>` "
"メソッドの実行の最中に問題に遭遇したとき（メソッドが False を返したとき）は、 :class:`QgsEditError "
"<qgis.core.QgsEditError>` 例外を送出します。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:571
msgid "Adding and Removing Fields"
msgstr "フィールドを追加または削除する"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:573
msgid ""
"To add fields (attributes), you need to specify a list of field definitions."
" For deletion of fields just provide a list of field indexes."
msgstr ""
"フィールド（属性）を追加するには、フィールドの定義を配列で指定する必要があります。フィールドを削除するにはフィールドのインデックスを配列で渡すだけです。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:604
msgid ""
"After adding or removing fields in the data provider the layer's fields need"
" to be updated because the changes are not automatically propagated."
msgstr "データプロバイダーのフィールドを追加または削除した後、レイヤーのフィールドは、変更が自動的に反映されていないため、更新する必要があります。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:611
msgid "**Directly save changes using** ``with`` **based command**"
msgstr "``with`` **に基づくコマンドを使って変更を直接保存する**"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:621
msgid "Using Spatial Index"
msgstr "空間索引を使う"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:623
msgid ""
"Spatial indexes can dramatically improve the performance of your code if you"
" need to do frequent queries to a vector layer. Imagine, for instance, that "
"you are writing an interpolation algorithm, and that for a given location "
"you need to know the 10 closest points from a points layer, in order to use "
"those point for calculating the interpolated value. Without a spatial index,"
" the only way for QGIS to find those 10 points is to compute the distance "
"from each and every point to the specified location and then compare those "
"distances. This can be a very time consuming task, especially if it needs to"
" be repeated for several locations. If a spatial index exists for the layer,"
" the operation is much more effective."
msgstr ""
"空間索引は、頻繁にベクターレイヤーに問い合わせをする必要がある場合、コードのパフォーマンスを劇的に改善します。例えば、補間アルゴリズムを書いていて、補間値の計算に使用するために与えられた位置に対して最も近い10点をポイントレイヤーから求める必要がある、と想像してください。空間索引が無いと、QGISがこれらの10点を求める方法は、すべての点から指定の場所への距離を計算してそれらの距離を比較することしかありません。これは、いくつかの場所について繰り返す必要がある場合は特に、非常に時間のかかる処理となります。もし空間索引がレイヤーに作成されていれば、処理はもっと効率的になります。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:634
msgid ""
"Think of a layer without a spatial index as a telephone book in which "
"telephone numbers are not ordered or indexed. The only way to find the "
"telephone number of a given person is to read from the beginning until you "
"find it."
msgstr ""
"空間索引の無いレイヤーは、電話番号が順番に並んでいない、もしくは索引の無い電話帳と思ってください。所定の人の電話番号を見つける唯一の方法は、巻頭からその番号を見つけるまで読むだけです。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:638
msgid ""
"Spatial indexes are not created by default for a QGIS vector layer, but you "
"can create them easily. This is what you have to do:"
msgstr "空間索引は、QGISベクターレイヤーに対してデフォルトでは作成されていませんが、簡単に作成できます。しなければいけないことはこうです："

#: ../../docs/pyqgis_developer_cookbook/vector.rst:657
msgid ""
"alternatively, you can load all features of a layer at once using bulk "
"loading"
msgstr "代わりに、一括読み込みを使用してレイヤーのすべての地物を一度に読み込むことができます"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:663
msgid "once spatial index is filled with some values, you can do some queries"
msgstr "空間索引に何かしらの値が入れられると検索ができるようになります"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:677
msgid "Creating Vector Layers"
msgstr "ベクターレイヤを作る"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:679
msgid "There are several ways to generate a vector layer dataset:"
msgstr "ベクターレイヤデータセットを作るには幾つかの方法があります。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:681
msgid ""
"the :class:`QgsVectorFileWriter <qgis.core.QgsVectorFileWriter>` class: A "
"convenient class for writing vector files to disk, using either a static "
"call to :meth:`writeAsVectorFormat() "
"<qgis.core.QgsVectorFileWriter.writeAsVectorFormat>` which saves the whole "
"vector layer or creating an instance of the class and issue calls to "
":meth:`addFeature() <qgis.core.QgsVectorFileWriter.addFeature>`. This class "
"supports all the vector formats that OGR supports (GeoPackage, Shapefile, "
"GeoJSON, KML and others)."
msgstr ""
":class:`QgsVectorFileWriter <qgis.core.QgsVectorFileWriter>` "
"クラス：ベクターファイルをディスクに書きこむための便利なクラスです。静的メソッド :meth:`writeAsVectorFormat() "
"<qgis.core.QgsVectorFileWriter.writeAsVectorFormat>` "
"を呼び出してすべてのベクターレイヤを保存するか、もしくはクラスインスタンスを作ってから :meth:`addFeature() "
"<qgis.core.QgsVectorFileWriter.addFeature>` "
"メソッドを呼び出すか、いずれかの方法を使うことができます。このクラスはGeoPackage、Shapefile、GeoJSON、KMLその他のすべてのOGRがサポートするベクターフォーマットをサポートしています。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:689
msgid ""
"the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` class: instantiates a"
" data provider that interprets the supplied path (url) of the data source to"
" connect to and access the data. It can be used to create temporary, memory-"
"based layers (``memory``) and connect to OGR datasets (``ogr``), databases "
"(``postgres``, ``spatialite``, ``mysql``, ``mssql``) and more (``wfs``, "
"``gpx``, ``delimitedtext``...)."
msgstr ""
":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` クラス：データソースの指定されたパス (url) "
"を解釈してデータに接続し、アクセスしたデータプロバイダをインスタンス化します。メモリ上の一時的なレイヤ(``memory``) "
"を作ったり、OGRデータセット(``ogr``) やデータベース (``postgres``, ``spatialite``, ``mysql``, "
"``mssql``) やその他 (``wfs``, ``gpx``, ``delimitedtext``...) に接続するために使うことができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:869
msgid "From an instance of :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>`"
msgstr ":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` クラスのインスタンスから作成する"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:871
msgid ""
"Among all the data providers supported by the :class:`QgsVectorLayer "
"<qgis.core.QgsVectorLayer>` class, let's focus on the memory-based layers. "
"Memory provider is intended to be used mainly by plugin or 3rd party app "
"developers. It does not store data on disk, allowing developers to use it as"
" a fast backend for some temporary layers."
msgstr ""
":class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` "
"クラスによってサポートされているすべてのデータプロバイダのうちから、ここではメモリレイヤに焦点をあてましょう。メモリプロバイダは主にプラグインやサードパーティ製アプリの開発者に使われることを意図しています。ディスクにデータを格納することをしないため、開発者はなんらかの一時的なレイヤのための手っ取り早いバックエンドとしてこれを使うことができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:877
msgid "The provider supports string, int and double fields."
msgstr "このプロバイダは属性フィールドの型として string、int、double をサポートします。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:879
msgid ""
"The memory provider also supports spatial indexing, which is enabled by "
"calling the provider's :meth:`createSpatialIndex() "
"<qgis.core.QgsVectorDataProvider.createSpatialIndex>` function. Once the "
"spatial index is created you will be able to iterate over features within "
"smaller regions faster (since it's not necessary to traverse all the "
"features, only those in specified rectangle)."
msgstr ""
"メモリプロバイダは空間インデックスもサポートしています。これはプロバイダの :meth:`createSpatialIndex() "
"<qgis.core.QgsVectorDataProvider.createSpatialIndex>` "
"関数を呼び出すことによって有効になります。空間インデックスが作成されると、複数の地物にわたって行う処理を、より小さな領域内でより速く行うことができます。これはあらためて地物すべてを走査する必要がなく、指定された領域内のみを走査すればよいからです。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:886
msgid ""
"A memory provider is created by passing ``\"memory\"`` as the provider "
"string to the :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` "
"constructor."
msgstr ""
"メモリプロバイダは :class:`QgsVectorLayer <qgis.core.QgsVectorLayer>` "
"コンストラクタにプロバイダ文字列として ``\"memory\"`` を渡すと作ることができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:889
msgid ""
"The constructor also takes a URI defining the geometry type of the layer, "
"one of: ``\"Point\"``, ``\"LineString\"``, ``\"Polygon\"``, "
"``\"MultiPoint\"``, ``\"MultiLineString\"``, ``\"MultiPolygon\"`` or "
"``\"None\"``."
msgstr ""
"コンストラクタはレイヤのジオメトリタイプを定義するURIも必要とします。これは "
"``\"Point\"``、``\"LineString\"``、``\"Polygon\"``、``\"MultiPoint\"``、``\"MultiLineString\"``、``\"MultiPolygon\"``、``\"None\"``のうちのひとつです。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:893
msgid ""
"The URI can also specify the coordinate reference system, fields, and "
"indexing of the memory provider in the URI. The syntax is:"
msgstr "URIではメモリプロバイダの座標参照系、属性フィールド、URI内でのメモリプロバイダのインデックスも指定できます。構文は、"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:899
msgid "crs=definition"
msgstr "crs=definition"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:897
msgid ""
"Specifies the coordinate reference system, where definition may be any of "
"the forms accepted by :meth:`QgsCoordinateReferenceSystem.createFromString "
"<qgis.core.QgsCoordinateReferenceSystem.createFromString>`"
msgstr ""
"座標参照系を指定します。ここでの定義は :meth:`QgsCoordinateReferenceSystem.createFromString "
"<qgis.core.QgsCoordinateReferenceSystem.createFromString>` "
"で有効な形式のいずれかを使用します。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:902
msgid "index=yes"
msgstr "index=yes"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:902
msgid "Specifies that the provider will use a spatial index"
msgstr "プロバイダーが空間インデックスを使うように指定します。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:907
msgid "field=name:type(length,precision)"
msgstr "field=name:type(length,precision)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:905
msgid ""
"Specifies an attribute of the layer.  The attribute has a name, and "
"optionally a type (integer, double, or string), length, and precision. There"
" may be multiple field definitions."
msgstr ""
"レイヤーの属性を指定します。属性は名前を持ち、オプションとして型(integer, double, "
"string)、長さ、および精度を持ちます。フィールドの定義は複数あってかまいません。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:909
msgid "The following example of a URI incorporates all these options"
msgstr "次のサンプルは全てのこれらのオプションを含んだURLです::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:915
msgid ""
"The following example code illustrates creating and populating a memory "
"provider"
msgstr "次のサンプルコードはメモリプロバイダーを作成してデータ投入をしている様子です::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:941
msgid "Finally, let's check whether everything went well"
msgstr "最後にやったことを全て確認していきましょう::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:966
msgid "Appearance (Symbology) of Vector Layers"
msgstr "ベクタレイヤの表現(シンボロジ)"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:968
msgid ""
"When a vector layer is being rendered, the appearance of the data is given "
"by **renderer** and **symbols** associated with the layer.  Symbols are "
"classes which take care of drawing of visual representation of features, "
"while renderers determine what symbol will be used for a particular feature."
msgstr ""
"ベクタレイヤがレンダリングされるとき、データの表現はレイヤに関連付けられた **レンダラー** と **シンボル** "
"によって決定されます。シンボルは地物の視覚的表現を処理するクラスで、レンダラはそれぞれの地物でどのシンボルが使われるかを決定します。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:979
msgid "And with that reference, let us explore it a bit"
msgstr "この参照を利用して、少しだけ探索してみましょう::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:992
msgid "Type"
msgstr "タイプ"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:992
msgid "Class"
msgstr "クラス"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:992
msgid "Description"
msgstr "詳細"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:994
msgid "singleSymbol"
msgstr "singleSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:994
msgid ":class:`QgsSingleSymbolRenderer <qgis.core.QgsSingleSymbolRenderer>`"
msgstr ":class:`QgsSingleSymbolRenderer <qgis.core.QgsSingleSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:994
msgid "Renders all features with the same symbol"
msgstr "単一シンボル。全ての地物を同じシンボルでレンダリングします"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:995
msgid "categorizedSymbol"
msgstr "categorizedSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:995
msgid ""
":class:`QgsCategorizedSymbolRenderer "
"<qgis.core.QgsCategorizedSymbolRenderer>`"
msgstr ""
":class:`QgsCategorizedSymbolRenderer "
"<qgis.core.QgsCategorizedSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:995
msgid "Renders features using a different symbol for each category"
msgstr "分類されたシンボル。カテゴリごとに違うシンボルを使って地物をレンダリングします"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:996
msgid "graduatedSymbol"
msgstr "graduatedSymbol"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:996
msgid ""
":class:`QgsGraduatedSymbolRenderer  <qgis.core.QgsGraduatedSymbolRenderer>`"
msgstr ""
":class:`QgsGraduatedSymbolRenderer  <qgis.core.QgsGraduatedSymbolRenderer>`"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:996
msgid "Renders features using a different symbol for each range of values"
msgstr "段階に分けられたシンボル。それぞれの範囲の値によって違うシンボルを使って地物をレンダリングします"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1011
msgid ""
"It is possible to obtain a dump of a renderer contents in text form --- can "
"be useful for debugging"
msgstr "レンダラーの中身をテキストフォームにダンプできます --- デバッグ時に役に立つでしょう::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1025
msgid "Single Symbol Renderer"
msgstr "単一シンボルレンダラー"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1052
msgid ""
"``name`` indicates the shape of the marker, and can be any of the following:"
msgstr "``name`` は、マーカーの形状を示しており、以下のいずれかとすることができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1054
msgid "``circle``"
msgstr "``circle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1055
msgid "``square``"
msgstr "``square``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1056
msgid "``cross``"
msgstr "``cross``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1057
msgid "``rectangle``"
msgstr "``rectangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1058
msgid "``diamond``"
msgstr "``diamond``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1059
msgid "``pentagon``"
msgstr "``pentagon``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1060
msgid "``triangle``"
msgstr "``triangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1061
msgid "``equilateral_triangle``"
msgstr "``equilateral_triangle``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1062
msgid "``star``"
msgstr "``star``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1063
msgid "``regular_star``"
msgstr "``regular_star``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1064
msgid "``arrow``"
msgstr "``arrow``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1065
msgid "``filled_arrowhead``"
msgstr "``filled_arrowhead``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1066
msgid "``x``"
msgstr "``x``"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1080
msgid "This can be useful if you want to alter some properties:"
msgstr "いくつかのプロパティを変更したい場合に便利です:"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1099
msgid "Categorized Symbol Renderer"
msgstr "分類シンボルレンダラー"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1104
msgid "To get a list of categories"
msgstr "カテゴリの配列を取得するには"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1135
msgid "Graduated Symbol Renderer"
msgstr "段階シンボルレンダラー"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1137
msgid ""
"This renderer is very similar to the categorized symbol renderer described "
"above, but instead of one attribute value per class it works with ranges of "
"values and thus can be used only with numerical attributes."
msgstr ""
"このレンダラーは先ほど扱ったカテゴリ分けシンボルのレンダラーととても似ていますが、クラスごとの一つの属性値の代わりに領域の値として動作し、そのため数字の属性のみ使うことができます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1141
msgid "To find out more about ranges used in the renderer"
msgstr "レンダラーで使われている領域の多くの情報を見つけるには"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1173
msgid ""
"If you wish to create your own graduated symbol renderer you can do so as "
"illustrated in the example snippet below (which creates a simple two class "
"arrangement)"
msgstr ""
"もし連続値シンボルレンダラーを作ろうとしているのであれば次のスニペットの例で書かれているようにします(これはシンプルな二つのクラスを作成するものを取り上げています)::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1217
msgid "Working with Symbols"
msgstr "シンボルの操作"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1252
msgid "Size and width are in millimeters by default, angles are in degrees."
msgstr "サイズと幅は標準でミリメートルが使われ、角度は 度 が使われます。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1257
msgid "Working with Symbol Layers"
msgstr "シンボルレイヤーの操作"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1303
msgid "Creating Custom Symbol Layer Types"
msgstr "カスタムシンボルレイヤータイプの作成"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1305
msgid ""
"Imagine you would like to customize the way how the data gets rendered. You "
"can create your own symbol layer class that will draw the features exactly "
"as you wish. Here is an example of a marker that draws red circles with "
"specified radius"
msgstr ""
"データをどうレンダリングするかをカスタマイズしたいと考えているとします。思うままに地物を描画する独自のシンボルレイヤークラスを作成できます。次の例は指定した半径で赤い円を描画するマーカーを示しています::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1365
msgid ""
"Usually it is convenient to add a GUI for setting attributes of the symbol "
"layer type to allow users to customize the appearance: in case of our "
"example above we can let user set circle radius. The following code "
"implements such widget"
msgstr ""
"普通はユーザーに外観をカスタマイズさせるためにシンボルレイヤータイプの属性を設定するGUIを追加すると使いやすくなります: "
"上記の例であればユーザーは円の半径を設定できます。次のコードはそのようなウィジェットの実装となります::"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1417
msgid ""
"Now we are missing only the final glue: to make QGIS aware of these new "
"classes. This is done by adding the symbol layer to registry. It is possible"
" to use the symbol layer also without adding it to the registry, but some "
"functionality will not work: e.g. loading of project files with the custom "
"symbol layers or inability to edit the layer's attributes in GUI."
msgstr ""
"私達は最後につなげるところだけまだ扱っていません: QGIS "
"にこれらの新しいクラスを知らせる方法です。これはレジストリにシンボルレイヤーを追加すれば完了です。レジストリに追加しなくてもシンボルレイヤーを使うことはできますが、いくつかの機能が動かないでしょう:"
" 例えばカスタムシンボルレイヤーを使ってプロジェクトファイルを読み込んだり、GUIでレイヤーの属性を編集できないなど。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1423
msgid "We will have to create metadata for the symbol layer"
msgstr "シンボルレイヤーのメタデータを作る必要があるでしょう"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1448
msgid ""
"The last step is to add this symbol layer to the registry --- and we are "
"done."
msgstr "最後にこのシンボルレイヤーをレジストリに追加します --- これで完了です。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1454
msgid "Creating Custom Renderers"
msgstr "カスタムレンダラーの作成"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1456
msgid ""
"It might be useful to create a new renderer implementation if you would like"
" to customize the rules how to select symbols for rendering of features. "
"Some use cases where you would want to do it: symbol is determined from a "
"combination of fields, size of symbols changes depending on current scale "
"etc."
msgstr ""
"もし地物をレンダリングするためのシンボルをどう選択するかをカスタマイズしたいのであれば、新しいレンダラーの実装を作ると便利かもしれません。いくつかのユースケースとしてこんなことをしたいのかもしれません:"
" フィールドの組み合わせからシンボルを決定する、現在の縮尺に合わせてシンボルのサイズを変更するなどなど。"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1461
msgid ""
"The following code shows a simple custom renderer that creates two marker "
"symbols and chooses randomly one of them for every feature"
msgstr "次のコードは二つのマーカーシンボルを作成して全ての地物からランダムに一つ選ぶ簡単なカスタムレンダラーです"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1552
msgid ""
"The last missing bit is the renderer metadata and registration in registry, "
"otherwise loading of layers with the renderer will not work and user will "
"not be able to select it from the list of renderers. Let us finish our "
"RandomRenderer example"
msgstr ""
"最後のちょっとした作業はレンダラーのメタデータとレジストリへの登録です。これらをしないとレンダラーのレイヤーの読み込みは動かず、ユーザーはレンダラーのリストから選択できないでしょう。では、私達の"
" RandomRenderer の例を終わらせましょう"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1609
msgid "Further Topics"
msgstr "より詳しいトピック"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1612
msgid "**TODO:**"
msgstr "**TODO:**"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1614
msgid "creating/modifying symbols"
msgstr "シンボルの作成や修正"

#: ../../docs/pyqgis_developer_cookbook/vector.rst:1617
msgid "exploring symbol layer and renderer registries"
msgstr "シンボルレイヤーとレンダラーのレジストリを調べる方法"
